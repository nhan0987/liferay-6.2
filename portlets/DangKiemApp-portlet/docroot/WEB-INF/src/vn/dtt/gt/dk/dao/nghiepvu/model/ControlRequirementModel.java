/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.gt.dk.dao.nghiepvu.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ControlRequirement service. Represents a row in the &quot;vr_controlrequirement&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.dtt.gt.dk.dao.nghiepvu.model.impl.ControlRequirementModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.dtt.gt.dk.dao.nghiepvu.model.impl.ControlRequirementImpl}.
 * </p>
 *
 * @author win_64
 * @see ControlRequirement
 * @see vn.dtt.gt.dk.dao.nghiepvu.model.impl.ControlRequirementImpl
 * @see vn.dtt.gt.dk.dao.nghiepvu.model.impl.ControlRequirementModelImpl
 * @generated
 */
public interface ControlRequirementModel extends BaseModel<ControlRequirement> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a control requirement model instance should use the {@link ControlRequirement} interface instead.
	 */

	/**
	 * Returns the primary key of this control requirement.
	 *
	 * @return the primary key of this control requirement
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this control requirement.
	 *
	 * @param primaryKey the primary key of this control requirement
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this control requirement.
	 *
	 * @return the ID of this control requirement
	 */
	public long getId();

	/**
	 * Sets the ID of this control requirement.
	 *
	 * @param id the ID of this control requirement
	 */
	public void setId(long id);

	/**
	 * Returns the registered inspection ID of this control requirement.
	 *
	 * @return the registered inspection ID of this control requirement
	 */
	public long getRegisteredInspectionId();

	/**
	 * Sets the registered inspection ID of this control requirement.
	 *
	 * @param registeredInspectionId the registered inspection ID of this control requirement
	 */
	public void setRegisteredInspectionId(long registeredInspectionId);

	/**
	 * Returns the requirement number of this control requirement.
	 *
	 * @return the requirement number of this control requirement
	 */
	@AutoEscape
	public String getRequirementNumber();

	/**
	 * Sets the requirement number of this control requirement.
	 *
	 * @param requirementNumber the requirement number of this control requirement
	 */
	public void setRequirementNumber(String requirementNumber);

	/**
	 * Returns the requirement date of this control requirement.
	 *
	 * @return the requirement date of this control requirement
	 */
	public Date getRequirementDate();

	/**
	 * Sets the requirement date of this control requirement.
	 *
	 * @param requirementDate the requirement date of this control requirement
	 */
	public void setRequirementDate(Date requirementDate);

	/**
	 * Returns the corporation ID of this control requirement.
	 *
	 * @return the corporation ID of this control requirement
	 */
	@AutoEscape
	public String getCorporationId();

	/**
	 * Sets the corporation ID of this control requirement.
	 *
	 * @param corporationId the corporation ID of this control requirement
	 */
	public void setCorporationId(String corporationId);

	/**
	 * Returns the control content of this control requirement.
	 *
	 * @return the control content of this control requirement
	 */
	@AutoEscape
	public String getControlContent();

	/**
	 * Sets the control content of this control requirement.
	 *
	 * @param controlContent the control content of this control requirement
	 */
	public void setControlContent(String controlContent);

	/**
	 * Returns the control deadline of this control requirement.
	 *
	 * @return the control deadline of this control requirement
	 */
	public Date getControlDeadline();

	/**
	 * Sets the control deadline of this control requirement.
	 *
	 * @param controlDeadline the control deadline of this control requirement
	 */
	public void setControlDeadline(Date controlDeadline);

	/**
	 * Returns the attached file of this control requirement.
	 *
	 * @return the attached file of this control requirement
	 */
	public int getAttachedFile();

	/**
	 * Sets the attached file of this control requirement.
	 *
	 * @param attachedFile the attached file of this control requirement
	 */
	public void setAttachedFile(int attachedFile);

	/**
	 * Returns the requirement content of this control requirement.
	 *
	 * @return the requirement content of this control requirement
	 */
	@AutoEscape
	public String getRequirementContent();

	/**
	 * Sets the requirement content of this control requirement.
	 *
	 * @param requirementContent the requirement content of this control requirement
	 */
	public void setRequirementContent(String requirementContent);

	/**
	 * Returns the control report deadline of this control requirement.
	 *
	 * @return the control report deadline of this control requirement
	 */
	public Date getControlReportDeadline();

	/**
	 * Sets the control report deadline of this control requirement.
	 *
	 * @param controlReportDeadline the control report deadline of this control requirement
	 */
	public void setControlReportDeadline(Date controlReportDeadline);

	/**
	 * Returns the remarks of this control requirement.
	 *
	 * @return the remarks of this control requirement
	 */
	@AutoEscape
	public String getRemarks();

	/**
	 * Sets the remarks of this control requirement.
	 *
	 * @param remarks the remarks of this control requirement
	 */
	public void setRemarks(String remarks);

	/**
	 * Returns the sign name of this control requirement.
	 *
	 * @return the sign name of this control requirement
	 */
	@AutoEscape
	public String getSignName();

	/**
	 * Sets the sign name of this control requirement.
	 *
	 * @param signName the sign name of this control requirement
	 */
	public void setSignName(String signName);

	/**
	 * Returns the sign title of this control requirement.
	 *
	 * @return the sign title of this control requirement
	 */
	@AutoEscape
	public String getSignTitle();

	/**
	 * Sets the sign title of this control requirement.
	 *
	 * @param signTitle the sign title of this control requirement
	 */
	public void setSignTitle(String signTitle);

	/**
	 * Returns the sign place of this control requirement.
	 *
	 * @return the sign place of this control requirement
	 */
	@AutoEscape
	public String getSignPlace();

	/**
	 * Sets the sign place of this control requirement.
	 *
	 * @param signPlace the sign place of this control requirement
	 */
	public void setSignPlace(String signPlace);

	/**
	 * Returns the sign date of this control requirement.
	 *
	 * @return the sign date of this control requirement
	 */
	public Date getSignDate();

	/**
	 * Sets the sign date of this control requirement.
	 *
	 * @param signDate the sign date of this control requirement
	 */
	public void setSignDate(Date signDate);

	/**
	 * Returns the inspectionrecord ID of this control requirement.
	 *
	 * @return the inspectionrecord ID of this control requirement
	 */
	public long getInspectionrecordId();

	/**
	 * Sets the inspectionrecord ID of this control requirement.
	 *
	 * @param inspectionrecordId the inspectionrecord ID of this control requirement
	 */
	public void setInspectionrecordId(long inspectionrecordId);

	/**
	 * Returns the phieuxulyphu ID of this control requirement.
	 *
	 * @return the phieuxulyphu ID of this control requirement
	 */
	public long getPhieuxulyphuId();

	/**
	 * Sets the phieuxulyphu ID of this control requirement.
	 *
	 * @param phieuxulyphuId the phieuxulyphu ID of this control requirement
	 */
	public void setPhieuxulyphuId(long phieuxulyphuId);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		vn.dtt.gt.dk.dao.nghiepvu.model.ControlRequirement controlRequirement);

	@Override
	public int hashCode();

	@Override
	public CacheModel<vn.dtt.gt.dk.dao.nghiepvu.model.ControlRequirement> toCacheModel();

	@Override
	public vn.dtt.gt.dk.dao.nghiepvu.model.ControlRequirement toEscapedModel();

	@Override
	public vn.dtt.gt.dk.dao.nghiepvu.model.ControlRequirement toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}