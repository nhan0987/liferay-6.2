/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.gt.dk.dao.motcua.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.gt.dk.dao.motcua.model.MotCuaPhanCongXuLy;
import vn.dtt.gt.dk.dao.motcua.model.MotCuaPhanCongXuLyModel;
import vn.dtt.gt.dk.dao.motcua.model.MotCuaPhanCongXuLySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the MotCuaPhanCongXuLy service. Represents a row in the &quot;motcua_phancongxuly&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.gt.dk.dao.motcua.model.MotCuaPhanCongXuLyModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MotCuaPhanCongXuLyImpl}.
 * </p>
 *
 * @author win_64
 * @see MotCuaPhanCongXuLyImpl
 * @see vn.dtt.gt.dk.dao.motcua.model.MotCuaPhanCongXuLy
 * @see vn.dtt.gt.dk.dao.motcua.model.MotCuaPhanCongXuLyModel
 * @generated
 */
@JSON(strict = true)
public class MotCuaPhanCongXuLyModelImpl extends BaseModelImpl<MotCuaPhanCongXuLy>
	implements MotCuaPhanCongXuLyModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a mot cua phan cong xu ly model instance should use the {@link vn.dtt.gt.dk.dao.motcua.model.MotCuaPhanCongXuLy} interface instead.
	 */
	public static final String TABLE_NAME = "motcua_phancongxuly";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "phieuxulychinhid", Types.BIGINT },
			{ "phieuxulyphuid", Types.BIGINT },
			{ "trangthaihosoid", Types.BIGINT },
			{ "nguoixuly", Types.BIGINT },
			{ "nhomxuly", Types.BIGINT },
			{ "ngayphancong", Types.TIMESTAMP },
			{ "nguoiphancong", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table motcua_phancongxuly (id LONG not null primary key,phieuxulychinhid LONG,phieuxulyphuid LONG,trangthaihosoid LONG,nguoixuly LONG,nhomxuly LONG,ngayphancong DATE null,nguoiphancong LONG)";
	public static final String TABLE_SQL_DROP = "drop table motcua_phancongxuly";
	public static final String ORDER_BY_JPQL = " ORDER BY motCuaPhanCongXuLy.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY motcua_phancongxuly.id ASC";
	public static final String DATA_SOURCE = "tthcDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.gt.dk.dao.motcua.model.MotCuaPhanCongXuLy"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.gt.dk.dao.motcua.model.MotCuaPhanCongXuLy"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.gt.dk.dao.motcua.model.MotCuaPhanCongXuLy"),
			true);
	public static long PHIEUXULYCHINHID_COLUMN_BITMASK = 1L;
	public static long ID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static MotCuaPhanCongXuLy toModel(MotCuaPhanCongXuLySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		MotCuaPhanCongXuLy model = new MotCuaPhanCongXuLyImpl();

		model.setId(soapModel.getId());
		model.setPhieuXuLyChinhId(soapModel.getPhieuXuLyChinhId());
		model.setPhieuXuLyPhuId(soapModel.getPhieuXuLyPhuId());
		model.setTrangThaiHoSoId(soapModel.getTrangThaiHoSoId());
		model.setNguoiXuLy(soapModel.getNguoiXuLy());
		model.setNhomXuLy(soapModel.getNhomXuLy());
		model.setNgayPhanCong(soapModel.getNgayPhanCong());
		model.setNguoiPhanCong(soapModel.getNguoiPhanCong());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<MotCuaPhanCongXuLy> toModels(
		MotCuaPhanCongXuLySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<MotCuaPhanCongXuLy> models = new ArrayList<MotCuaPhanCongXuLy>(soapModels.length);

		for (MotCuaPhanCongXuLySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.gt.dk.dao.motcua.model.MotCuaPhanCongXuLy"));

	public MotCuaPhanCongXuLyModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return MotCuaPhanCongXuLy.class;
	}

	@Override
	public String getModelClassName() {
		return MotCuaPhanCongXuLy.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("phieuXuLyChinhId", getPhieuXuLyChinhId());
		attributes.put("phieuXuLyPhuId", getPhieuXuLyPhuId());
		attributes.put("trangThaiHoSoId", getTrangThaiHoSoId());
		attributes.put("nguoiXuLy", getNguoiXuLy());
		attributes.put("nhomXuLy", getNhomXuLy());
		attributes.put("ngayPhanCong", getNgayPhanCong());
		attributes.put("nguoiPhanCong", getNguoiPhanCong());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long phieuXuLyChinhId = (Long)attributes.get("phieuXuLyChinhId");

		if (phieuXuLyChinhId != null) {
			setPhieuXuLyChinhId(phieuXuLyChinhId);
		}

		Long phieuXuLyPhuId = (Long)attributes.get("phieuXuLyPhuId");

		if (phieuXuLyPhuId != null) {
			setPhieuXuLyPhuId(phieuXuLyPhuId);
		}

		Long trangThaiHoSoId = (Long)attributes.get("trangThaiHoSoId");

		if (trangThaiHoSoId != null) {
			setTrangThaiHoSoId(trangThaiHoSoId);
		}

		Long nguoiXuLy = (Long)attributes.get("nguoiXuLy");

		if (nguoiXuLy != null) {
			setNguoiXuLy(nguoiXuLy);
		}

		Long nhomXuLy = (Long)attributes.get("nhomXuLy");

		if (nhomXuLy != null) {
			setNhomXuLy(nhomXuLy);
		}

		Date ngayPhanCong = (Date)attributes.get("ngayPhanCong");

		if (ngayPhanCong != null) {
			setNgayPhanCong(ngayPhanCong);
		}

		Long nguoiPhanCong = (Long)attributes.get("nguoiPhanCong");

		if (nguoiPhanCong != null) {
			setNguoiPhanCong(nguoiPhanCong);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	@JSON
	@Override
	public long getPhieuXuLyChinhId() {
		return _phieuXuLyChinhId;
	}

	@Override
	public void setPhieuXuLyChinhId(long phieuXuLyChinhId) {
		_columnBitmask |= PHIEUXULYCHINHID_COLUMN_BITMASK;

		if (!_setOriginalPhieuXuLyChinhId) {
			_setOriginalPhieuXuLyChinhId = true;

			_originalPhieuXuLyChinhId = _phieuXuLyChinhId;
		}

		_phieuXuLyChinhId = phieuXuLyChinhId;
	}

	public long getOriginalPhieuXuLyChinhId() {
		return _originalPhieuXuLyChinhId;
	}

	@JSON
	@Override
	public long getPhieuXuLyPhuId() {
		return _phieuXuLyPhuId;
	}

	@Override
	public void setPhieuXuLyPhuId(long phieuXuLyPhuId) {
		_phieuXuLyPhuId = phieuXuLyPhuId;
	}

	@JSON
	@Override
	public long getTrangThaiHoSoId() {
		return _trangThaiHoSoId;
	}

	@Override
	public void setTrangThaiHoSoId(long trangThaiHoSoId) {
		_trangThaiHoSoId = trangThaiHoSoId;
	}

	@JSON
	@Override
	public long getNguoiXuLy() {
		return _nguoiXuLy;
	}

	@Override
	public void setNguoiXuLy(long nguoiXuLy) {
		_nguoiXuLy = nguoiXuLy;
	}

	@JSON
	@Override
	public long getNhomXuLy() {
		return _nhomXuLy;
	}

	@Override
	public void setNhomXuLy(long nhomXuLy) {
		_nhomXuLy = nhomXuLy;
	}

	@JSON
	@Override
	public Date getNgayPhanCong() {
		return _ngayPhanCong;
	}

	@Override
	public void setNgayPhanCong(Date ngayPhanCong) {
		_ngayPhanCong = ngayPhanCong;
	}

	@JSON
	@Override
	public long getNguoiPhanCong() {
		return _nguoiPhanCong;
	}

	@Override
	public void setNguoiPhanCong(long nguoiPhanCong) {
		_nguoiPhanCong = nguoiPhanCong;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			MotCuaPhanCongXuLy.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public MotCuaPhanCongXuLy toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (MotCuaPhanCongXuLy)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MotCuaPhanCongXuLyImpl motCuaPhanCongXuLyImpl = new MotCuaPhanCongXuLyImpl();

		motCuaPhanCongXuLyImpl.setId(getId());
		motCuaPhanCongXuLyImpl.setPhieuXuLyChinhId(getPhieuXuLyChinhId());
		motCuaPhanCongXuLyImpl.setPhieuXuLyPhuId(getPhieuXuLyPhuId());
		motCuaPhanCongXuLyImpl.setTrangThaiHoSoId(getTrangThaiHoSoId());
		motCuaPhanCongXuLyImpl.setNguoiXuLy(getNguoiXuLy());
		motCuaPhanCongXuLyImpl.setNhomXuLy(getNhomXuLy());
		motCuaPhanCongXuLyImpl.setNgayPhanCong(getNgayPhanCong());
		motCuaPhanCongXuLyImpl.setNguoiPhanCong(getNguoiPhanCong());

		motCuaPhanCongXuLyImpl.resetOriginalValues();

		return motCuaPhanCongXuLyImpl;
	}

	@Override
	public int compareTo(MotCuaPhanCongXuLy motCuaPhanCongXuLy) {
		int value = 0;

		if (getId() < motCuaPhanCongXuLy.getId()) {
			value = -1;
		}
		else if (getId() > motCuaPhanCongXuLy.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof MotCuaPhanCongXuLy)) {
			return false;
		}

		MotCuaPhanCongXuLy motCuaPhanCongXuLy = (MotCuaPhanCongXuLy)obj;

		long primaryKey = motCuaPhanCongXuLy.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		MotCuaPhanCongXuLyModelImpl motCuaPhanCongXuLyModelImpl = this;

		motCuaPhanCongXuLyModelImpl._originalPhieuXuLyChinhId = motCuaPhanCongXuLyModelImpl._phieuXuLyChinhId;

		motCuaPhanCongXuLyModelImpl._setOriginalPhieuXuLyChinhId = false;

		motCuaPhanCongXuLyModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<MotCuaPhanCongXuLy> toCacheModel() {
		MotCuaPhanCongXuLyCacheModel motCuaPhanCongXuLyCacheModel = new MotCuaPhanCongXuLyCacheModel();

		motCuaPhanCongXuLyCacheModel.id = getId();

		motCuaPhanCongXuLyCacheModel.phieuXuLyChinhId = getPhieuXuLyChinhId();

		motCuaPhanCongXuLyCacheModel.phieuXuLyPhuId = getPhieuXuLyPhuId();

		motCuaPhanCongXuLyCacheModel.trangThaiHoSoId = getTrangThaiHoSoId();

		motCuaPhanCongXuLyCacheModel.nguoiXuLy = getNguoiXuLy();

		motCuaPhanCongXuLyCacheModel.nhomXuLy = getNhomXuLy();

		Date ngayPhanCong = getNgayPhanCong();

		if (ngayPhanCong != null) {
			motCuaPhanCongXuLyCacheModel.ngayPhanCong = ngayPhanCong.getTime();
		}
		else {
			motCuaPhanCongXuLyCacheModel.ngayPhanCong = Long.MIN_VALUE;
		}

		motCuaPhanCongXuLyCacheModel.nguoiPhanCong = getNguoiPhanCong();

		return motCuaPhanCongXuLyCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", phieuXuLyChinhId=");
		sb.append(getPhieuXuLyChinhId());
		sb.append(", phieuXuLyPhuId=");
		sb.append(getPhieuXuLyPhuId());
		sb.append(", trangThaiHoSoId=");
		sb.append(getTrangThaiHoSoId());
		sb.append(", nguoiXuLy=");
		sb.append(getNguoiXuLy());
		sb.append(", nhomXuLy=");
		sb.append(getNhomXuLy());
		sb.append(", ngayPhanCong=");
		sb.append(getNgayPhanCong());
		sb.append(", nguoiPhanCong=");
		sb.append(getNguoiPhanCong());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.gt.dk.dao.motcua.model.MotCuaPhanCongXuLy");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phieuXuLyChinhId</column-name><column-value><![CDATA[");
		sb.append(getPhieuXuLyChinhId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phieuXuLyPhuId</column-name><column-value><![CDATA[");
		sb.append(getPhieuXuLyPhuId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trangThaiHoSoId</column-name><column-value><![CDATA[");
		sb.append(getTrangThaiHoSoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nguoiXuLy</column-name><column-value><![CDATA[");
		sb.append(getNguoiXuLy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nhomXuLy</column-name><column-value><![CDATA[");
		sb.append(getNhomXuLy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayPhanCong</column-name><column-value><![CDATA[");
		sb.append(getNgayPhanCong());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nguoiPhanCong</column-name><column-value><![CDATA[");
		sb.append(getNguoiPhanCong());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = MotCuaPhanCongXuLy.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			MotCuaPhanCongXuLy.class
		};
	private long _id;
	private long _phieuXuLyChinhId;
	private long _originalPhieuXuLyChinhId;
	private boolean _setOriginalPhieuXuLyChinhId;
	private long _phieuXuLyPhuId;
	private long _trangThaiHoSoId;
	private long _nguoiXuLy;
	private long _nhomXuLy;
	private Date _ngayPhanCong;
	private long _nguoiPhanCong;
	private long _columnBitmask;
	private MotCuaPhanCongXuLy _escapedModel;
}