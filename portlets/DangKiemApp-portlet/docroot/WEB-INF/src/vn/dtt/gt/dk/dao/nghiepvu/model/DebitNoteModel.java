/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.gt.dk.dao.nghiepvu.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the DebitNote service. Represents a row in the &quot;vr_debitnote&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.dtt.gt.dk.dao.nghiepvu.model.impl.DebitNoteModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.dtt.gt.dk.dao.nghiepvu.model.impl.DebitNoteImpl}.
 * </p>
 *
 * @author win_64
 * @see DebitNote
 * @see vn.dtt.gt.dk.dao.nghiepvu.model.impl.DebitNoteImpl
 * @see vn.dtt.gt.dk.dao.nghiepvu.model.impl.DebitNoteModelImpl
 * @generated
 */
public interface DebitNoteModel extends BaseModel<DebitNote> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a debit note model instance should use the {@link DebitNote} interface instead.
	 */

	/**
	 * Returns the primary key of this debit note.
	 *
	 * @return the primary key of this debit note
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this debit note.
	 *
	 * @param primaryKey the primary key of this debit note
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this debit note.
	 *
	 * @return the ID of this debit note
	 */
	public long getId();

	/**
	 * Sets the ID of this debit note.
	 *
	 * @param id the ID of this debit note
	 */
	public void setId(long id);

	/**
	 * Returns the debit note number of this debit note.
	 *
	 * @return the debit note number of this debit note
	 */
	@AutoEscape
	public String getDebitNoteNumber();

	/**
	 * Sets the debit note number of this debit note.
	 *
	 * @param debitNoteNumber the debit note number of this debit note
	 */
	public void setDebitNoteNumber(String debitNoteNumber);

	/**
	 * Returns the transaction ID of this debit note.
	 *
	 * @return the transaction ID of this debit note
	 */
	@AutoEscape
	public String getTransactionId();

	/**
	 * Sets the transaction ID of this debit note.
	 *
	 * @param transactionId the transaction ID of this debit note
	 */
	public void setTransactionId(String transactionId);

	/**
	 * Returns the corporation ID of this debit note.
	 *
	 * @return the corporation ID of this debit note
	 */
	@AutoEscape
	public String getCorporationId();

	/**
	 * Sets the corporation ID of this debit note.
	 *
	 * @param corporationId the corporation ID of this debit note
	 */
	public void setCorporationId(String corporationId);

	/**
	 * Returns the financial accountant of this debit note.
	 *
	 * @return the financial accountant of this debit note
	 */
	@AutoEscape
	public String getFinancialAccountant();

	/**
	 * Sets the financial accountant of this debit note.
	 *
	 * @param financialAccountant the financial accountant of this debit note
	 */
	public void setFinancialAccountant(String financialAccountant);

	/**
	 * Returns the organization of this debit note.
	 *
	 * @return the organization of this debit note
	 */
	@AutoEscape
	public String getOrganization();

	/**
	 * Sets the organization of this debit note.
	 *
	 * @param organization the organization of this debit note
	 */
	public void setOrganization(String organization);

	/**
	 * Returns the division of this debit note.
	 *
	 * @return the division of this debit note
	 */
	@AutoEscape
	public String getDivision();

	/**
	 * Sets the division of this debit note.
	 *
	 * @param division the division of this debit note
	 */
	public void setDivision(String division);

	/**
	 * Returns the report by of this debit note.
	 *
	 * @return the report by of this debit note
	 */
	@AutoEscape
	public String getReportBy();

	/**
	 * Sets the report by of this debit note.
	 *
	 * @param reportBy the report by of this debit note
	 */
	public void setReportBy(String reportBy);

	/**
	 * Returns the report date of this debit note.
	 *
	 * @return the report date of this debit note
	 */
	public Date getReportDate();

	/**
	 * Sets the report date of this debit note.
	 *
	 * @param reportDate the report date of this debit note
	 */
	public void setReportDate(Date reportDate);

	/**
	 * Returns the from date of this debit note.
	 *
	 * @return the from date of this debit note
	 */
	public Date getFromDate();

	/**
	 * Sets the from date of this debit note.
	 *
	 * @param fromDate the from date of this debit note
	 */
	public void setFromDate(Date fromDate);

	/**
	 * Returns the to date of this debit note.
	 *
	 * @return the to date of this debit note
	 */
	public Date getToDate();

	/**
	 * Sets the to date of this debit note.
	 *
	 * @param toDate the to date of this debit note
	 */
	public void setToDate(Date toDate);

	/**
	 * Returns the attached file of this debit note.
	 *
	 * @return the attached file of this debit note
	 */
	public long getAttachedFile();

	/**
	 * Sets the attached file of this debit note.
	 *
	 * @param attachedFile the attached file of this debit note
	 */
	public void setAttachedFile(long attachedFile);

	/**
	 * Returns the total payment of this debit note.
	 *
	 * @return the total payment of this debit note
	 */
	public double getTotalPayment();

	/**
	 * Sets the total payment of this debit note.
	 *
	 * @param totalPayment the total payment of this debit note
	 */
	public void setTotalPayment(double totalPayment);

	/**
	 * Returns the payment type of this debit note.
	 *
	 * @return the payment type of this debit note
	 */
	public long getPaymentType();

	/**
	 * Sets the payment type of this debit note.
	 *
	 * @param paymentType the payment type of this debit note
	 */
	public void setPaymentType(long paymentType);

	/**
	 * Returns the mark as deleted of this debit note.
	 *
	 * @return the mark as deleted of this debit note
	 */
	public int getMarkAsDeleted();

	/**
	 * Sets the mark as deleted of this debit note.
	 *
	 * @param markAsDeleted the mark as deleted of this debit note
	 */
	public void setMarkAsDeleted(int markAsDeleted);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(DebitNote debitNote);

	@Override
	public int hashCode();

	@Override
	public CacheModel<DebitNote> toCacheModel();

	@Override
	public DebitNote toEscapedModel();

	@Override
	public DebitNote toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}