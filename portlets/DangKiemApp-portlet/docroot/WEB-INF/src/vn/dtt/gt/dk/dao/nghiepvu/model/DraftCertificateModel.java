/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.gt.dk.dao.nghiepvu.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the DraftCertificate service. Represents a row in the &quot;vr_draftcertificate&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.dtt.gt.dk.dao.nghiepvu.model.impl.DraftCertificateModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.dtt.gt.dk.dao.nghiepvu.model.impl.DraftCertificateImpl}.
 * </p>
 *
 * @author win_64
 * @see DraftCertificate
 * @see vn.dtt.gt.dk.dao.nghiepvu.model.impl.DraftCertificateImpl
 * @see vn.dtt.gt.dk.dao.nghiepvu.model.impl.DraftCertificateModelImpl
 * @generated
 */
public interface DraftCertificateModel extends BaseModel<DraftCertificate> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a draft certificate model instance should use the {@link DraftCertificate} interface instead.
	 */

	/**
	 * Returns the primary key of this draft certificate.
	 *
	 * @return the primary key of this draft certificate
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this draft certificate.
	 *
	 * @param primaryKey the primary key of this draft certificate
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this draft certificate.
	 *
	 * @return the ID of this draft certificate
	 */
	public long getId();

	/**
	 * Sets the ID of this draft certificate.
	 *
	 * @param id the ID of this draft certificate
	 */
	public void setId(long id);

	/**
	 * Returns the attached file of this draft certificate.
	 *
	 * @return the attached file of this draft certificate
	 */
	public long getAttachedFile();

	/**
	 * Sets the attached file of this draft certificate.
	 *
	 * @param attachedFile the attached file of this draft certificate
	 */
	public void setAttachedFile(long attachedFile);

	/**
	 * Returns the certificate type of this draft certificate.
	 *
	 * @return the certificate type of this draft certificate
	 */
	public long getCertificateType();

	/**
	 * Sets the certificate type of this draft certificate.
	 *
	 * @param certificateType the certificate type of this draft certificate
	 */
	public void setCertificateType(long certificateType);

	/**
	 * Returns the inspection report ID of this draft certificate.
	 *
	 * @return the inspection report ID of this draft certificate
	 */
	public long getInspectionReportId();

	/**
	 * Sets the inspection report ID of this draft certificate.
	 *
	 * @param inspectionReportId the inspection report ID of this draft certificate
	 */
	public void setInspectionReportId(long inspectionReportId);

	/**
	 * Returns the safetytest report ID of this draft certificate.
	 *
	 * @return the safetytest report ID of this draft certificate
	 */
	public long getSafetytestReportId();

	/**
	 * Sets the safetytest report ID of this draft certificate.
	 *
	 * @param safetytestReportId the safetytest report ID of this draft certificate
	 */
	public void setSafetytestReportId(long safetytestReportId);

	/**
	 * Returns the emission test report ID of this draft certificate.
	 *
	 * @return the emission test report ID of this draft certificate
	 */
	public long getEmissionTestReportId();

	/**
	 * Sets the emission test report ID of this draft certificate.
	 *
	 * @param emissionTestReportId the emission test report ID of this draft certificate
	 */
	public void setEmissionTestReportId(long emissionTestReportId);

	/**
	 * Returns the cop report ID of this draft certificate.
	 *
	 * @return the cop report ID of this draft certificate
	 */
	public long getCopReportId();

	/**
	 * Sets the cop report ID of this draft certificate.
	 *
	 * @param copReportId the cop report ID of this draft certificate
	 */
	public void setCopReportId(long copReportId);

	/**
	 * Returns the reason of this draft certificate.
	 *
	 * @return the reason of this draft certificate
	 */
	@AutoEscape
	public String getReason();

	/**
	 * Sets the reason of this draft certificate.
	 *
	 * @param reason the reason of this draft certificate
	 */
	public void setReason(String reason);

	/**
	 * Returns the remarks of this draft certificate.
	 *
	 * @return the remarks of this draft certificate
	 */
	@AutoEscape
	public String getRemarks();

	/**
	 * Sets the remarks of this draft certificate.
	 *
	 * @param remarks the remarks of this draft certificate
	 */
	public void setRemarks(String remarks);

	/**
	 * Returns the created date of this draft certificate.
	 *
	 * @return the created date of this draft certificate
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this draft certificate.
	 *
	 * @param createdDate the created date of this draft certificate
	 */
	public void setCreatedDate(Date createdDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		vn.dtt.gt.dk.dao.nghiepvu.model.DraftCertificate draftCertificate);

	@Override
	public int hashCode();

	@Override
	public CacheModel<vn.dtt.gt.dk.dao.nghiepvu.model.DraftCertificate> toCacheModel();

	@Override
	public vn.dtt.gt.dk.dao.nghiepvu.model.DraftCertificate toEscapedModel();

	@Override
	public vn.dtt.gt.dk.dao.nghiepvu.model.DraftCertificate toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}