/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.gt.dk.dao.aswmsg.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.gt.dk.dao.aswmsg.model.AswmsgValidationLog;
import vn.dtt.gt.dk.dao.aswmsg.model.AswmsgValidationLogModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the AswmsgValidationLog service. Represents a row in the &quot;aswmsg_validationlog&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.gt.dk.dao.aswmsg.model.AswmsgValidationLogModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AswmsgValidationLogImpl}.
 * </p>
 *
 * @author win_64
 * @see AswmsgValidationLogImpl
 * @see vn.dtt.gt.dk.dao.aswmsg.model.AswmsgValidationLog
 * @see vn.dtt.gt.dk.dao.aswmsg.model.AswmsgValidationLogModel
 * @generated
 */
public class AswmsgValidationLogModelImpl extends BaseModelImpl<AswmsgValidationLog>
	implements AswmsgValidationLogModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a aswmsg validation log model instance should use the {@link vn.dtt.gt.dk.dao.aswmsg.model.AswmsgValidationLog} interface instead.
	 */
	public static final String TABLE_NAME = "aswmsg_validationlog";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "messagelogid", Types.BIGINT },
			{ "tagname", Types.VARCHAR },
			{ "validationcode", Types.VARCHAR },
			{ "description", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table aswmsg_validationlog (id LONG not null primary key,messagelogid LONG,tagname VARCHAR(75) null,validationcode VARCHAR(75) null,description VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table aswmsg_validationlog";
	public static final String ORDER_BY_JPQL = " ORDER BY aswmsgValidationLog.Id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY aswmsg_validationlog.id ASC";
	public static final String DATA_SOURCE = "tthcDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.gt.dk.dao.aswmsg.model.AswmsgValidationLog"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.gt.dk.dao.aswmsg.model.AswmsgValidationLog"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.gt.dk.dao.aswmsg.model.AswmsgValidationLog"),
			true);
	public static long MESSAGELOGID_COLUMN_BITMASK = 1L;
	public static long ID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.gt.dk.dao.aswmsg.model.AswmsgValidationLog"));

	public AswmsgValidationLogModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _Id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _Id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AswmsgValidationLog.class;
	}

	@Override
	public String getModelClassName() {
		return AswmsgValidationLog.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("Id", getId());
		attributes.put("MessageLogId", getMessageLogId());
		attributes.put("TagName", getTagName());
		attributes.put("ValidationCode", getValidationCode());
		attributes.put("Description", getDescription());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long Id = (Long)attributes.get("Id");

		if (Id != null) {
			setId(Id);
		}

		Long MessageLogId = (Long)attributes.get("MessageLogId");

		if (MessageLogId != null) {
			setMessageLogId(MessageLogId);
		}

		String TagName = (String)attributes.get("TagName");

		if (TagName != null) {
			setTagName(TagName);
		}

		String ValidationCode = (String)attributes.get("ValidationCode");

		if (ValidationCode != null) {
			setValidationCode(ValidationCode);
		}

		String Description = (String)attributes.get("Description");

		if (Description != null) {
			setDescription(Description);
		}
	}

	@Override
	public long getId() {
		return _Id;
	}

	@Override
	public void setId(long Id) {
		_columnBitmask = -1L;

		_Id = Id;
	}

	@Override
	public long getMessageLogId() {
		return _MessageLogId;
	}

	@Override
	public void setMessageLogId(long MessageLogId) {
		_columnBitmask |= MESSAGELOGID_COLUMN_BITMASK;

		if (!_setOriginalMessageLogId) {
			_setOriginalMessageLogId = true;

			_originalMessageLogId = _MessageLogId;
		}

		_MessageLogId = MessageLogId;
	}

	public long getOriginalMessageLogId() {
		return _originalMessageLogId;
	}

	@Override
	public String getTagName() {
		if (_TagName == null) {
			return StringPool.BLANK;
		}
		else {
			return _TagName;
		}
	}

	@Override
	public void setTagName(String TagName) {
		_TagName = TagName;
	}

	@Override
	public String getValidationCode() {
		if (_ValidationCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _ValidationCode;
		}
	}

	@Override
	public void setValidationCode(String ValidationCode) {
		_ValidationCode = ValidationCode;
	}

	@Override
	public String getDescription() {
		if (_Description == null) {
			return StringPool.BLANK;
		}
		else {
			return _Description;
		}
	}

	@Override
	public void setDescription(String Description) {
		_Description = Description;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			AswmsgValidationLog.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AswmsgValidationLog toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AswmsgValidationLog)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AswmsgValidationLogImpl aswmsgValidationLogImpl = new AswmsgValidationLogImpl();

		aswmsgValidationLogImpl.setId(getId());
		aswmsgValidationLogImpl.setMessageLogId(getMessageLogId());
		aswmsgValidationLogImpl.setTagName(getTagName());
		aswmsgValidationLogImpl.setValidationCode(getValidationCode());
		aswmsgValidationLogImpl.setDescription(getDescription());

		aswmsgValidationLogImpl.resetOriginalValues();

		return aswmsgValidationLogImpl;
	}

	@Override
	public int compareTo(AswmsgValidationLog aswmsgValidationLog) {
		int value = 0;

		if (getId() < aswmsgValidationLog.getId()) {
			value = -1;
		}
		else if (getId() > aswmsgValidationLog.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AswmsgValidationLog)) {
			return false;
		}

		AswmsgValidationLog aswmsgValidationLog = (AswmsgValidationLog)obj;

		long primaryKey = aswmsgValidationLog.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		AswmsgValidationLogModelImpl aswmsgValidationLogModelImpl = this;

		aswmsgValidationLogModelImpl._originalMessageLogId = aswmsgValidationLogModelImpl._MessageLogId;

		aswmsgValidationLogModelImpl._setOriginalMessageLogId = false;

		aswmsgValidationLogModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<AswmsgValidationLog> toCacheModel() {
		AswmsgValidationLogCacheModel aswmsgValidationLogCacheModel = new AswmsgValidationLogCacheModel();

		aswmsgValidationLogCacheModel.Id = getId();

		aswmsgValidationLogCacheModel.MessageLogId = getMessageLogId();

		aswmsgValidationLogCacheModel.TagName = getTagName();

		String TagName = aswmsgValidationLogCacheModel.TagName;

		if ((TagName != null) && (TagName.length() == 0)) {
			aswmsgValidationLogCacheModel.TagName = null;
		}

		aswmsgValidationLogCacheModel.ValidationCode = getValidationCode();

		String ValidationCode = aswmsgValidationLogCacheModel.ValidationCode;

		if ((ValidationCode != null) && (ValidationCode.length() == 0)) {
			aswmsgValidationLogCacheModel.ValidationCode = null;
		}

		aswmsgValidationLogCacheModel.Description = getDescription();

		String Description = aswmsgValidationLogCacheModel.Description;

		if ((Description != null) && (Description.length() == 0)) {
			aswmsgValidationLogCacheModel.Description = null;
		}

		return aswmsgValidationLogCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{Id=");
		sb.append(getId());
		sb.append(", MessageLogId=");
		sb.append(getMessageLogId());
		sb.append(", TagName=");
		sb.append(getTagName());
		sb.append(", ValidationCode=");
		sb.append(getValidationCode());
		sb.append(", Description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.gt.dk.dao.aswmsg.model.AswmsgValidationLog");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>Id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MessageLogId</column-name><column-value><![CDATA[");
		sb.append(getMessageLogId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>TagName</column-name><column-value><![CDATA[");
		sb.append(getTagName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ValidationCode</column-name><column-value><![CDATA[");
		sb.append(getValidationCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = AswmsgValidationLog.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			AswmsgValidationLog.class
		};
	private long _Id;
	private long _MessageLogId;
	private long _originalMessageLogId;
	private boolean _setOriginalMessageLogId;
	private String _TagName;
	private String _ValidationCode;
	private String _Description;
	private long _columnBitmask;
	private AswmsgValidationLog _escapedModel;
}