/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.gt.dk.dao.nghiepvu.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the VehicleStatistics service. Represents a row in the &quot;vr_vehiclestatistics&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.dtt.gt.dk.dao.nghiepvu.model.impl.VehicleStatisticsModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.dtt.gt.dk.dao.nghiepvu.model.impl.VehicleStatisticsImpl}.
 * </p>
 *
 * @author win_64
 * @see VehicleStatistics
 * @see vn.dtt.gt.dk.dao.nghiepvu.model.impl.VehicleStatisticsImpl
 * @see vn.dtt.gt.dk.dao.nghiepvu.model.impl.VehicleStatisticsModelImpl
 * @generated
 */
public interface VehicleStatisticsModel extends BaseModel<VehicleStatistics> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a vehicle statistics model instance should use the {@link VehicleStatistics} interface instead.
	 */

	/**
	 * Returns the primary key of this vehicle statistics.
	 *
	 * @return the primary key of this vehicle statistics
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this vehicle statistics.
	 *
	 * @param primaryKey the primary key of this vehicle statistics
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this vehicle statistics.
	 *
	 * @return the ID of this vehicle statistics
	 */
	public long getId();

	/**
	 * Sets the ID of this vehicle statistics.
	 *
	 * @param id the ID of this vehicle statistics
	 */
	public void setId(long id);

	/**
	 * Returns the registered inspection ID of this vehicle statistics.
	 *
	 * @return the registered inspection ID of this vehicle statistics
	 */
	public long getRegisteredInspectionId();

	/**
	 * Sets the registered inspection ID of this vehicle statistics.
	 *
	 * @param registeredInspectionId the registered inspection ID of this vehicle statistics
	 */
	public void setRegisteredInspectionId(long registeredInspectionId);

	/**
	 * Returns the total registered vehicle of this vehicle statistics.
	 *
	 * @return the total registered vehicle of this vehicle statistics
	 */
	public long getTotalRegisteredVehicle();

	/**
	 * Sets the total registered vehicle of this vehicle statistics.
	 *
	 * @param totalRegisteredVehicle the total registered vehicle of this vehicle statistics
	 */
	public void setTotalRegisteredVehicle(long totalRegisteredVehicle);

	/**
	 * Returns the total requested vehicle of this vehicle statistics.
	 *
	 * @return the total requested vehicle of this vehicle statistics
	 */
	public long getTotalRequestedVehicle();

	/**
	 * Sets the total requested vehicle of this vehicle statistics.
	 *
	 * @param totalRequestedVehicle the total requested vehicle of this vehicle statistics
	 */
	public void setTotalRequestedVehicle(long totalRequestedVehicle);

	/**
	 * Returns the total not yet requested vehicle of this vehicle statistics.
	 *
	 * @return the total not yet requested vehicle of this vehicle statistics
	 */
	public long getTotalNotYetRequestedVehicle();

	/**
	 * Sets the total not yet requested vehicle of this vehicle statistics.
	 *
	 * @param totalNotYetRequestedVehicle the total not yet requested vehicle of this vehicle statistics
	 */
	public void setTotalNotYetRequestedVehicle(long totalNotYetRequestedVehicle);

	/**
	 * Returns the total cancelled vehicle of this vehicle statistics.
	 *
	 * @return the total cancelled vehicle of this vehicle statistics
	 */
	public long getTotalCancelledVehicle();

	/**
	 * Sets the total cancelled vehicle of this vehicle statistics.
	 *
	 * @param totalCancelledVehicle the total cancelled vehicle of this vehicle statistics
	 */
	public void setTotalCancelledVehicle(long totalCancelledVehicle);

	/**
	 * Returns the total inspected vehicle of this vehicle statistics.
	 *
	 * @return the total inspected vehicle of this vehicle statistics
	 */
	public long getTotalInspectedVehicle();

	/**
	 * Sets the total inspected vehicle of this vehicle statistics.
	 *
	 * @param totalInspectedVehicle the total inspected vehicle of this vehicle statistics
	 */
	public void setTotalInspectedVehicle(long totalInspectedVehicle);

	/**
	 * Returns the total resolved vehicle of this vehicle statistics.
	 *
	 * @return the total resolved vehicle of this vehicle statistics
	 */
	public long getTotalResolvedVehicle();

	/**
	 * Sets the total resolved vehicle of this vehicle statistics.
	 *
	 * @param totalResolvedVehicle the total resolved vehicle of this vehicle statistics
	 */
	public void setTotalResolvedVehicle(long totalResolvedVehicle);

	/**
	 * Returns the total reexported vehicle of this vehicle statistics.
	 *
	 * @return the total reexported vehicle of this vehicle statistics
	 */
	public long getTotalReexportedVehicle();

	/**
	 * Sets the total reexported vehicle of this vehicle statistics.
	 *
	 * @param totalReexportedVehicle the total reexported vehicle of this vehicle statistics
	 */
	public void setTotalReexportedVehicle(long totalReexportedVehicle);

	/**
	 * Returns the total wrong status vehicle of this vehicle statistics.
	 *
	 * @return the total wrong status vehicle of this vehicle statistics
	 */
	public long getTotalWrongStatusVehicle();

	/**
	 * Sets the total wrong status vehicle of this vehicle statistics.
	 *
	 * @param totalWrongStatusVehicle the total wrong status vehicle of this vehicle statistics
	 */
	public void setTotalWrongStatusVehicle(long totalWrongStatusVehicle);

	/**
	 * Returns the total safe test sample of this vehicle statistics.
	 *
	 * @return the total safe test sample of this vehicle statistics
	 */
	public long getTotalSafeTestSample();

	/**
	 * Sets the total safe test sample of this vehicle statistics.
	 *
	 * @param totalSafeTestSample the total safe test sample of this vehicle statistics
	 */
	public void setTotalSafeTestSample(long totalSafeTestSample);

	/**
	 * Returns the total emission test sample of this vehicle statistics.
	 *
	 * @return the total emission test sample of this vehicle statistics
	 */
	public long getTotalEmissionTestSample();

	/**
	 * Sets the total emission test sample of this vehicle statistics.
	 *
	 * @param totalEmissionTestSample the total emission test sample of this vehicle statistics
	 */
	public void setTotalEmissionTestSample(long totalEmissionTestSample);

	/**
	 * Returns the total control required vehicle of this vehicle statistics.
	 *
	 * @return the total control required vehicle of this vehicle statistics
	 */
	public long getTotalControlRequiredVehicle();

	/**
	 * Sets the total control required vehicle of this vehicle statistics.
	 *
	 * @param totalControlRequiredVehicle the total control required vehicle of this vehicle statistics
	 */
	public void setTotalControlRequiredVehicle(long totalControlRequiredVehicle);

	/**
	 * Returns the total certificate of this vehicle statistics.
	 *
	 * @return the total certificate of this vehicle statistics
	 */
	public long getTotalCertificate();

	/**
	 * Sets the total certificate of this vehicle statistics.
	 *
	 * @param totalCertificate the total certificate of this vehicle statistics
	 */
	public void setTotalCertificate(long totalCertificate);

	/**
	 * Returns the total violated vehicle of this vehicle statistics.
	 *
	 * @return the total violated vehicle of this vehicle statistics
	 */
	public long getTotalViolatedVehicle();

	/**
	 * Sets the total violated vehicle of this vehicle statistics.
	 *
	 * @param totalViolatedVehicle the total violated vehicle of this vehicle statistics
	 */
	public void setTotalViolatedVehicle(long totalViolatedVehicle);

	/**
	 * Returns the total technical spec of this vehicle statistics.
	 *
	 * @return the total technical spec of this vehicle statistics
	 */
	public long getTotalTechnicalSpec();

	/**
	 * Sets the total technical spec of this vehicle statistics.
	 *
	 * @param totalTechnicalSpec the total technical spec of this vehicle statistics
	 */
	public void setTotalTechnicalSpec(long totalTechnicalSpec);

	/**
	 * Returns the processing state of this vehicle statistics.
	 *
	 * @return the processing state of this vehicle statistics
	 */
	public long getProcessingState();

	/**
	 * Sets the processing state of this vehicle statistics.
	 *
	 * @param processingState the processing state of this vehicle statistics
	 */
	public void setProcessingState(long processingState);

	/**
	 * Returns the processing timing of this vehicle statistics.
	 *
	 * @return the processing timing of this vehicle statistics
	 */
	public long getProcessingTiming();

	/**
	 * Sets the processing timing of this vehicle statistics.
	 *
	 * @param processingTiming the processing timing of this vehicle statistics
	 */
	public void setProcessingTiming(long processingTiming);

	/**
	 * Returns the days upto deadline of this vehicle statistics.
	 *
	 * @return the days upto deadline of this vehicle statistics
	 */
	public long getDaysUptoDeadline();

	/**
	 * Sets the days upto deadline of this vehicle statistics.
	 *
	 * @param daysUptoDeadline the days upto deadline of this vehicle statistics
	 */
	public void setDaysUptoDeadline(long daysUptoDeadline);

	/**
	 * Returns the synch date of this vehicle statistics.
	 *
	 * @return the synch date of this vehicle statistics
	 */
	public Date getSynchDate();

	/**
	 * Sets the synch date of this vehicle statistics.
	 *
	 * @param SynchDate the synch date of this vehicle statistics
	 */
	public void setSynchDate(Date SynchDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(VehicleStatistics vehicleStatistics);

	@Override
	public int hashCode();

	@Override
	public CacheModel<VehicleStatistics> toCacheModel();

	@Override
	public VehicleStatistics toEscapedModel();

	@Override
	public VehicleStatistics toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}