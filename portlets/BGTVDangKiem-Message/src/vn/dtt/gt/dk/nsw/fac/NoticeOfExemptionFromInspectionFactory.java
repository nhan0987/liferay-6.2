//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.22 at 05:49:45 AM ICT 
//


package vn.dtt.gt.dk.nsw.fac;

import javax.xml.bind.annotation.XmlRegistry;
import vn.dtt.gt.dk.nsw.model.NoticeOfExemptionFromInspection;

/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the vn package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class NoticeOfExemptionFromInspectionFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: vn
     * 
     */
    public NoticeOfExemptionFromInspectionFactory() {
    }

    /**
     * Create an instance of {@link NoticeOfExemptionFromInspection }
     * 
     */
    public NoticeOfExemptionFromInspection createNoticeOfExemptionFromInspection() {
        return new NoticeOfExemptionFromInspection();
    }

    /**
     * Create an instance of {@link NoticeOfExemptionFromInspection.SpecificationList }
     * 
     */
    public NoticeOfExemptionFromInspection.SpecificationList createNoticeOfExemptionFromInspectionSpecificationList() {
        return new NoticeOfExemptionFromInspection.SpecificationList();
    }

    /**
     * Create an instance of {@link NoticeOfExemptionFromInspection.Importer }
     * 
     */
    public NoticeOfExemptionFromInspection.Importer createNoticeOfExemptionFromInspectionImporter() {
        return new NoticeOfExemptionFromInspection.Importer();
    }

    /**
     * Create an instance of {@link NoticeOfExemptionFromInspection.ProductionCountry }
     * 
     */
    public NoticeOfExemptionFromInspection.ProductionCountry createNoticeOfExemptionFromInspectionProductionCountry() {
        return new NoticeOfExemptionFromInspection.ProductionCountry();
    }

    /**
     * Create an instance of {@link NoticeOfExemptionFromInspection.CustomDeclaration }
     * 
     */
    public NoticeOfExemptionFromInspection.CustomDeclaration createNoticeOfExemptionFromInspectionCustomDeclaration() {
        return new NoticeOfExemptionFromInspection.CustomDeclaration();
    }

    /**
     * Create an instance of {@link NoticeOfExemptionFromInspection.SafetyTestReport }
     * 
     */
    public NoticeOfExemptionFromInspection.SafetyTestReport createNoticeOfExemptionFromInspectionSafetyTestReport() {
        return new NoticeOfExemptionFromInspection.SafetyTestReport();
    }

    /**
     * Create an instance of {@link NoticeOfExemptionFromInspection.EmissionTestReport }
     * 
     */
    public NoticeOfExemptionFromInspection.EmissionTestReport createNoticeOfExemptionFromInspectionEmissionTestReport() {
        return new NoticeOfExemptionFromInspection.EmissionTestReport();
    }

    /**
     * Create an instance of {@link NoticeOfExemptionFromInspection.COPReport }
     * 
     */
    public NoticeOfExemptionFromInspection.COPReport createNoticeOfExemptionFromInspectionCOPReport() {
        return new NoticeOfExemptionFromInspection.COPReport();
    }

    /**
     * Create an instance of {@link NoticeOfExemptionFromInspection.Circular }
     * 
     */
    public NoticeOfExemptionFromInspection.Circular createNoticeOfExemptionFromInspectionCircular() {
        return new NoticeOfExemptionFromInspection.Circular();
    }

    /**
     * Create an instance of {@link NoticeOfExemptionFromInspection.InspectorSign }
     * 
     */
    public NoticeOfExemptionFromInspection.InspectorSign createNoticeOfExemptionFromInspectionInspectorSign() {
        return new NoticeOfExemptionFromInspection.InspectorSign();
    }

    /**
     * Create an instance of {@link NoticeOfExemptionFromInspection.AttachedFile }
     * 
     */
    public NoticeOfExemptionFromInspection.AttachedFile createNoticeOfExemptionFromInspectionAttachedFile() {
        return new NoticeOfExemptionFromInspection.AttachedFile();
    }

    /**
     * Create an instance of {@link NoticeOfExemptionFromInspection.ImportedVehicle }
     * 
     */
    public NoticeOfExemptionFromInspection.ImportedVehicle createNoticeOfExemptionFromInspectionImportedVehicle() {
        return new NoticeOfExemptionFromInspection.ImportedVehicle();
    }

    /**
     * Create an instance of {@link NoticeOfExemptionFromInspection.SpecificationList.SpecItem }
     * 
     */
    public NoticeOfExemptionFromInspection.SpecificationList.SpecItem createNoticeOfExemptionFromInspectionSpecificationListSpecItem() {
        return new NoticeOfExemptionFromInspection.SpecificationList.SpecItem();
    }

}
