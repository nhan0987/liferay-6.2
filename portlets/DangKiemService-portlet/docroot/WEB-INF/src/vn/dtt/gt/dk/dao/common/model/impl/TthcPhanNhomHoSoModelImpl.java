/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.gt.dk.dao.common.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.gt.dk.dao.common.model.TthcPhanNhomHoSo;
import vn.dtt.gt.dk.dao.common.model.TthcPhanNhomHoSoModel;
import vn.dtt.gt.dk.dao.common.model.TthcPhanNhomHoSoSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the TthcPhanNhomHoSo service. Represents a row in the &quot;tthc_phannhomhoso&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.gt.dk.dao.common.model.TthcPhanNhomHoSoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TthcPhanNhomHoSoImpl}.
 * </p>
 *
 * @author huymq
 * @see TthcPhanNhomHoSoImpl
 * @see vn.dtt.gt.dk.dao.common.model.TthcPhanNhomHoSo
 * @see vn.dtt.gt.dk.dao.common.model.TthcPhanNhomHoSoModel
 * @generated
 */
@JSON(strict = true)
public class TthcPhanNhomHoSoModelImpl extends BaseModelImpl<TthcPhanNhomHoSo>
	implements TthcPhanNhomHoSoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tthc phan nhom ho so model instance should use the {@link vn.dtt.gt.dk.dao.common.model.TthcPhanNhomHoSo} interface instead.
	 */
	public static final String TABLE_NAME = "tthc_phannhomhoso";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "maphannhom", Types.VARCHAR },
			{ "tenphannhom", Types.VARCHAR },
			{ "tentienganh", Types.VARCHAR },
			{ "LOAIPHIEUXULY", Types.INTEGER },
			{ "sothutu", Types.INTEGER },
			{ "synchdate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table tthc_phannhomhoso (id LONG not null primary key,maphannhom VARCHAR(75) null,tenphannhom VARCHAR(75) null,tentienganh VARCHAR(75) null,LOAIPHIEUXULY INTEGER,sothutu INTEGER,synchdate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table tthc_phannhomhoso";
	public static final String ORDER_BY_JPQL = " ORDER BY tthcPhanNhomHoSo.Id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY tthc_phannhomhoso.id ASC";
	public static final String DATA_SOURCE = "tthcDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.gt.dk.dao.common.model.TthcPhanNhomHoSo"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.gt.dk.dao.common.model.TthcPhanNhomHoSo"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static TthcPhanNhomHoSo toModel(TthcPhanNhomHoSoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		TthcPhanNhomHoSo model = new TthcPhanNhomHoSoImpl();

		model.setId(soapModel.getId());
		model.setMaPhanNhom(soapModel.getMaPhanNhom());
		model.setTenPhanNhom(soapModel.getTenPhanNhom());
		model.setTenTiengAnh(soapModel.getTenTiengAnh());
		model.setLoaiPhieuXuLy(soapModel.getLoaiPhieuXuLy());
		model.setSoThuTu(soapModel.getSoThuTu());
		model.setSynchdate(soapModel.getSynchdate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<TthcPhanNhomHoSo> toModels(
		TthcPhanNhomHoSoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<TthcPhanNhomHoSo> models = new ArrayList<TthcPhanNhomHoSo>(soapModels.length);

		for (TthcPhanNhomHoSoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.gt.dk.dao.common.model.TthcPhanNhomHoSo"));

	public TthcPhanNhomHoSoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _Id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _Id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TthcPhanNhomHoSo.class;
	}

	@Override
	public String getModelClassName() {
		return TthcPhanNhomHoSo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("Id", getId());
		attributes.put("MaPhanNhom", getMaPhanNhom());
		attributes.put("TenPhanNhom", getTenPhanNhom());
		attributes.put("TenTiengAnh", getTenTiengAnh());
		attributes.put("loaiPhieuXuLy", getLoaiPhieuXuLy());
		attributes.put("SoThuTu", getSoThuTu());
		attributes.put("synchdate", getSynchdate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long Id = (Long)attributes.get("Id");

		if (Id != null) {
			setId(Id);
		}

		String MaPhanNhom = (String)attributes.get("MaPhanNhom");

		if (MaPhanNhom != null) {
			setMaPhanNhom(MaPhanNhom);
		}

		String TenPhanNhom = (String)attributes.get("TenPhanNhom");

		if (TenPhanNhom != null) {
			setTenPhanNhom(TenPhanNhom);
		}

		String TenTiengAnh = (String)attributes.get("TenTiengAnh");

		if (TenTiengAnh != null) {
			setTenTiengAnh(TenTiengAnh);
		}

		Integer loaiPhieuXuLy = (Integer)attributes.get("loaiPhieuXuLy");

		if (loaiPhieuXuLy != null) {
			setLoaiPhieuXuLy(loaiPhieuXuLy);
		}

		Integer SoThuTu = (Integer)attributes.get("SoThuTu");

		if (SoThuTu != null) {
			setSoThuTu(SoThuTu);
		}

		Date synchdate = (Date)attributes.get("synchdate");

		if (synchdate != null) {
			setSynchdate(synchdate);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _Id;
	}

	@Override
	public void setId(long Id) {
		_Id = Id;
	}

	@JSON
	@Override
	public String getMaPhanNhom() {
		if (_MaPhanNhom == null) {
			return StringPool.BLANK;
		}
		else {
			return _MaPhanNhom;
		}
	}

	@Override
	public void setMaPhanNhom(String MaPhanNhom) {
		_MaPhanNhom = MaPhanNhom;
	}

	@JSON
	@Override
	public String getTenPhanNhom() {
		if (_TenPhanNhom == null) {
			return StringPool.BLANK;
		}
		else {
			return _TenPhanNhom;
		}
	}

	@Override
	public void setTenPhanNhom(String TenPhanNhom) {
		_TenPhanNhom = TenPhanNhom;
	}

	@JSON
	@Override
	public String getTenTiengAnh() {
		if (_TenTiengAnh == null) {
			return StringPool.BLANK;
		}
		else {
			return _TenTiengAnh;
		}
	}

	@Override
	public void setTenTiengAnh(String TenTiengAnh) {
		_TenTiengAnh = TenTiengAnh;
	}

	@JSON
	@Override
	public int getLoaiPhieuXuLy() {
		return _loaiPhieuXuLy;
	}

	@Override
	public void setLoaiPhieuXuLy(int loaiPhieuXuLy) {
		_loaiPhieuXuLy = loaiPhieuXuLy;
	}

	@JSON
	@Override
	public int getSoThuTu() {
		return _SoThuTu;
	}

	@Override
	public void setSoThuTu(int SoThuTu) {
		_SoThuTu = SoThuTu;
	}

	@JSON
	@Override
	public Date getSynchdate() {
		return _synchdate;
	}

	@Override
	public void setSynchdate(Date synchdate) {
		_synchdate = synchdate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			TthcPhanNhomHoSo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TthcPhanNhomHoSo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TthcPhanNhomHoSo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TthcPhanNhomHoSoImpl tthcPhanNhomHoSoImpl = new TthcPhanNhomHoSoImpl();

		tthcPhanNhomHoSoImpl.setId(getId());
		tthcPhanNhomHoSoImpl.setMaPhanNhom(getMaPhanNhom());
		tthcPhanNhomHoSoImpl.setTenPhanNhom(getTenPhanNhom());
		tthcPhanNhomHoSoImpl.setTenTiengAnh(getTenTiengAnh());
		tthcPhanNhomHoSoImpl.setLoaiPhieuXuLy(getLoaiPhieuXuLy());
		tthcPhanNhomHoSoImpl.setSoThuTu(getSoThuTu());
		tthcPhanNhomHoSoImpl.setSynchdate(getSynchdate());

		tthcPhanNhomHoSoImpl.resetOriginalValues();

		return tthcPhanNhomHoSoImpl;
	}

	@Override
	public int compareTo(TthcPhanNhomHoSo tthcPhanNhomHoSo) {
		int value = 0;

		if (getId() < tthcPhanNhomHoSo.getId()) {
			value = -1;
		}
		else if (getId() > tthcPhanNhomHoSo.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TthcPhanNhomHoSo)) {
			return false;
		}

		TthcPhanNhomHoSo tthcPhanNhomHoSo = (TthcPhanNhomHoSo)obj;

		long primaryKey = tthcPhanNhomHoSo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<TthcPhanNhomHoSo> toCacheModel() {
		TthcPhanNhomHoSoCacheModel tthcPhanNhomHoSoCacheModel = new TthcPhanNhomHoSoCacheModel();

		tthcPhanNhomHoSoCacheModel.Id = getId();

		tthcPhanNhomHoSoCacheModel.MaPhanNhom = getMaPhanNhom();

		String MaPhanNhom = tthcPhanNhomHoSoCacheModel.MaPhanNhom;

		if ((MaPhanNhom != null) && (MaPhanNhom.length() == 0)) {
			tthcPhanNhomHoSoCacheModel.MaPhanNhom = null;
		}

		tthcPhanNhomHoSoCacheModel.TenPhanNhom = getTenPhanNhom();

		String TenPhanNhom = tthcPhanNhomHoSoCacheModel.TenPhanNhom;

		if ((TenPhanNhom != null) && (TenPhanNhom.length() == 0)) {
			tthcPhanNhomHoSoCacheModel.TenPhanNhom = null;
		}

		tthcPhanNhomHoSoCacheModel.TenTiengAnh = getTenTiengAnh();

		String TenTiengAnh = tthcPhanNhomHoSoCacheModel.TenTiengAnh;

		if ((TenTiengAnh != null) && (TenTiengAnh.length() == 0)) {
			tthcPhanNhomHoSoCacheModel.TenTiengAnh = null;
		}

		tthcPhanNhomHoSoCacheModel.loaiPhieuXuLy = getLoaiPhieuXuLy();

		tthcPhanNhomHoSoCacheModel.SoThuTu = getSoThuTu();

		Date synchdate = getSynchdate();

		if (synchdate != null) {
			tthcPhanNhomHoSoCacheModel.synchdate = synchdate.getTime();
		}
		else {
			tthcPhanNhomHoSoCacheModel.synchdate = Long.MIN_VALUE;
		}

		return tthcPhanNhomHoSoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{Id=");
		sb.append(getId());
		sb.append(", MaPhanNhom=");
		sb.append(getMaPhanNhom());
		sb.append(", TenPhanNhom=");
		sb.append(getTenPhanNhom());
		sb.append(", TenTiengAnh=");
		sb.append(getTenTiengAnh());
		sb.append(", loaiPhieuXuLy=");
		sb.append(getLoaiPhieuXuLy());
		sb.append(", SoThuTu=");
		sb.append(getSoThuTu());
		sb.append(", synchdate=");
		sb.append(getSynchdate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.gt.dk.dao.common.model.TthcPhanNhomHoSo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>Id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MaPhanNhom</column-name><column-value><![CDATA[");
		sb.append(getMaPhanNhom());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>TenPhanNhom</column-name><column-value><![CDATA[");
		sb.append(getTenPhanNhom());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>TenTiengAnh</column-name><column-value><![CDATA[");
		sb.append(getTenTiengAnh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>loaiPhieuXuLy</column-name><column-value><![CDATA[");
		sb.append(getLoaiPhieuXuLy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SoThuTu</column-name><column-value><![CDATA[");
		sb.append(getSoThuTu());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>synchdate</column-name><column-value><![CDATA[");
		sb.append(getSynchdate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TthcPhanNhomHoSo.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			TthcPhanNhomHoSo.class
		};
	private long _Id;
	private String _MaPhanNhom;
	private String _TenPhanNhom;
	private String _TenTiengAnh;
	private int _loaiPhieuXuLy;
	private int _SoThuTu;
	private Date _synchdate;
	private TthcPhanNhomHoSo _escapedModel;
}