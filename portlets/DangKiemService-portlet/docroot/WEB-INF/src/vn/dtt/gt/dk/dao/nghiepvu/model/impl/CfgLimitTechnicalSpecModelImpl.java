/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.gt.dk.dao.nghiepvu.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.gt.dk.dao.nghiepvu.model.CfgLimitTechnicalSpec;
import vn.dtt.gt.dk.dao.nghiepvu.model.CfgLimitTechnicalSpecModel;
import vn.dtt.gt.dk.dao.nghiepvu.model.CfgLimitTechnicalSpecSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CfgLimitTechnicalSpec service. Represents a row in the &quot;vr_cfg_limit_technicalspec&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.gt.dk.dao.nghiepvu.model.CfgLimitTechnicalSpecModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CfgLimitTechnicalSpecImpl}.
 * </p>
 *
 * @author huymq
 * @see CfgLimitTechnicalSpecImpl
 * @see vn.dtt.gt.dk.dao.nghiepvu.model.CfgLimitTechnicalSpec
 * @see vn.dtt.gt.dk.dao.nghiepvu.model.CfgLimitTechnicalSpecModel
 * @generated
 */
@JSON(strict = true)
public class CfgLimitTechnicalSpecModelImpl extends BaseModelImpl<CfgLimitTechnicalSpec>
	implements CfgLimitTechnicalSpecModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a cfg limit technical spec model instance should use the {@link vn.dtt.gt.dk.dao.nghiepvu.model.CfgLimitTechnicalSpec} interface instead.
	 */
	public static final String TABLE_NAME = "vr_cfg_limit_technicalspec";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "vehicletypecode", Types.VARCHAR },
			{ "vehicletypename", Types.VARCHAR },
			{ "reference_code_3", Types.VARCHAR },
			{ "reference_name", Types.VARCHAR },
			{ "searching_drive_config", Types.INTEGER },
			{ "altername", Types.VARCHAR },
			{ "sequenceno", Types.INTEGER },
			{ "specificationcode", Types.VARCHAR },
			{ "specificationname", Types.VARCHAR },
			{ "spec_description", Types.VARCHAR },
			{ "spec_category", Types.VARCHAR },
			{ "datagroupid", Types.BIGINT },
			{ "synchdate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table vr_cfg_limit_technicalspec (id LONG not null primary key,vehicletypecode VARCHAR(75) null,vehicletypename VARCHAR(75) null,reference_code_3 VARCHAR(75) null,reference_name VARCHAR(75) null,searching_drive_config INTEGER,altername VARCHAR(75) null,sequenceno INTEGER,specificationcode VARCHAR(75) null,specificationname VARCHAR(75) null,spec_description VARCHAR(75) null,spec_category VARCHAR(75) null,datagroupid LONG,synchdate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table vr_cfg_limit_technicalspec";
	public static final String ORDER_BY_JPQL = " ORDER BY cfgLimitTechnicalSpec.sequenceno ASC";
	public static final String ORDER_BY_SQL = " ORDER BY vr_cfg_limit_technicalspec.sequenceno ASC";
	public static final String DATA_SOURCE = "vrDataSource";
	public static final String SESSION_FACTORY = "vrSessionFactory";
	public static final String TX_MANAGER = "vrTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.gt.dk.dao.nghiepvu.model.CfgLimitTechnicalSpec"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.gt.dk.dao.nghiepvu.model.CfgLimitTechnicalSpec"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.gt.dk.dao.nghiepvu.model.CfgLimitTechnicalSpec"),
			true);
	public static long SPECIFICATIONCODE_COLUMN_BITMASK = 1L;
	public static long SEQUENCENO_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CfgLimitTechnicalSpec toModel(
		CfgLimitTechnicalSpecSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CfgLimitTechnicalSpec model = new CfgLimitTechnicalSpecImpl();

		model.setId(soapModel.getId());
		model.setVehicletypecode(soapModel.getVehicletypecode());
		model.setVehicletypename(soapModel.getVehicletypename());
		model.setReference_code_3(soapModel.getReference_code_3());
		model.setReference_name(soapModel.getReference_name());
		model.setSearching_drive_config(soapModel.getSearching_drive_config());
		model.setAltername(soapModel.getAltername());
		model.setSequenceno(soapModel.getSequenceno());
		model.setSpecificationcode(soapModel.getSpecificationcode());
		model.setSpecificationname(soapModel.getSpecificationname());
		model.setSpec_description(soapModel.getSpec_description());
		model.setSpec_category(soapModel.getSpec_category());
		model.setDatagroupid(soapModel.getDatagroupid());
		model.setSynchdate(soapModel.getSynchdate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CfgLimitTechnicalSpec> toModels(
		CfgLimitTechnicalSpecSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CfgLimitTechnicalSpec> models = new ArrayList<CfgLimitTechnicalSpec>(soapModels.length);

		for (CfgLimitTechnicalSpecSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.gt.dk.dao.nghiepvu.model.CfgLimitTechnicalSpec"));

	public CfgLimitTechnicalSpecModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CfgLimitTechnicalSpec.class;
	}

	@Override
	public String getModelClassName() {
		return CfgLimitTechnicalSpec.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("vehicletypecode", getVehicletypecode());
		attributes.put("vehicletypename", getVehicletypename());
		attributes.put("reference_code_3", getReference_code_3());
		attributes.put("reference_name", getReference_name());
		attributes.put("searching_drive_config", getSearching_drive_config());
		attributes.put("altername", getAltername());
		attributes.put("sequenceno", getSequenceno());
		attributes.put("specificationcode", getSpecificationcode());
		attributes.put("specificationname", getSpecificationname());
		attributes.put("spec_description", getSpec_description());
		attributes.put("spec_category", getSpec_category());
		attributes.put("datagroupid", getDatagroupid());
		attributes.put("synchdate", getSynchdate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String vehicletypecode = (String)attributes.get("vehicletypecode");

		if (vehicletypecode != null) {
			setVehicletypecode(vehicletypecode);
		}

		String vehicletypename = (String)attributes.get("vehicletypename");

		if (vehicletypename != null) {
			setVehicletypename(vehicletypename);
		}

		String reference_code_3 = (String)attributes.get("reference_code_3");

		if (reference_code_3 != null) {
			setReference_code_3(reference_code_3);
		}

		String reference_name = (String)attributes.get("reference_name");

		if (reference_name != null) {
			setReference_name(reference_name);
		}

		Integer searching_drive_config = (Integer)attributes.get(
				"searching_drive_config");

		if (searching_drive_config != null) {
			setSearching_drive_config(searching_drive_config);
		}

		String altername = (String)attributes.get("altername");

		if (altername != null) {
			setAltername(altername);
		}

		Integer sequenceno = (Integer)attributes.get("sequenceno");

		if (sequenceno != null) {
			setSequenceno(sequenceno);
		}

		String specificationcode = (String)attributes.get("specificationcode");

		if (specificationcode != null) {
			setSpecificationcode(specificationcode);
		}

		String specificationname = (String)attributes.get("specificationname");

		if (specificationname != null) {
			setSpecificationname(specificationname);
		}

		String spec_description = (String)attributes.get("spec_description");

		if (spec_description != null) {
			setSpec_description(spec_description);
		}

		String spec_category = (String)attributes.get("spec_category");

		if (spec_category != null) {
			setSpec_category(spec_category);
		}

		Long datagroupid = (Long)attributes.get("datagroupid");

		if (datagroupid != null) {
			setDatagroupid(datagroupid);
		}

		Date synchdate = (Date)attributes.get("synchdate");

		if (synchdate != null) {
			setSynchdate(synchdate);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public String getVehicletypecode() {
		if (_vehicletypecode == null) {
			return StringPool.BLANK;
		}
		else {
			return _vehicletypecode;
		}
	}

	@Override
	public void setVehicletypecode(String vehicletypecode) {
		_vehicletypecode = vehicletypecode;
	}

	@JSON
	@Override
	public String getVehicletypename() {
		if (_vehicletypename == null) {
			return StringPool.BLANK;
		}
		else {
			return _vehicletypename;
		}
	}

	@Override
	public void setVehicletypename(String vehicletypename) {
		_vehicletypename = vehicletypename;
	}

	@JSON
	@Override
	public String getReference_code_3() {
		if (_reference_code_3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _reference_code_3;
		}
	}

	@Override
	public void setReference_code_3(String reference_code_3) {
		_reference_code_3 = reference_code_3;
	}

	@JSON
	@Override
	public String getReference_name() {
		if (_reference_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _reference_name;
		}
	}

	@Override
	public void setReference_name(String reference_name) {
		_reference_name = reference_name;
	}

	@JSON
	@Override
	public int getSearching_drive_config() {
		return _searching_drive_config;
	}

	@Override
	public void setSearching_drive_config(int searching_drive_config) {
		_searching_drive_config = searching_drive_config;
	}

	@JSON
	@Override
	public String getAltername() {
		if (_altername == null) {
			return StringPool.BLANK;
		}
		else {
			return _altername;
		}
	}

	@Override
	public void setAltername(String altername) {
		_altername = altername;
	}

	@JSON
	@Override
	public int getSequenceno() {
		return _sequenceno;
	}

	@Override
	public void setSequenceno(int sequenceno) {
		_columnBitmask = -1L;

		_sequenceno = sequenceno;
	}

	@JSON
	@Override
	public String getSpecificationcode() {
		if (_specificationcode == null) {
			return StringPool.BLANK;
		}
		else {
			return _specificationcode;
		}
	}

	@Override
	public void setSpecificationcode(String specificationcode) {
		_columnBitmask |= SPECIFICATIONCODE_COLUMN_BITMASK;

		if (_originalSpecificationcode == null) {
			_originalSpecificationcode = _specificationcode;
		}

		_specificationcode = specificationcode;
	}

	public String getOriginalSpecificationcode() {
		return GetterUtil.getString(_originalSpecificationcode);
	}

	@JSON
	@Override
	public String getSpecificationname() {
		if (_specificationname == null) {
			return StringPool.BLANK;
		}
		else {
			return _specificationname;
		}
	}

	@Override
	public void setSpecificationname(String specificationname) {
		_specificationname = specificationname;
	}

	@JSON
	@Override
	public String getSpec_description() {
		if (_spec_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _spec_description;
		}
	}

	@Override
	public void setSpec_description(String spec_description) {
		_spec_description = spec_description;
	}

	@JSON
	@Override
	public String getSpec_category() {
		if (_spec_category == null) {
			return StringPool.BLANK;
		}
		else {
			return _spec_category;
		}
	}

	@Override
	public void setSpec_category(String spec_category) {
		_spec_category = spec_category;
	}

	@JSON
	@Override
	public long getDatagroupid() {
		return _datagroupid;
	}

	@Override
	public void setDatagroupid(long datagroupid) {
		_datagroupid = datagroupid;
	}

	@JSON
	@Override
	public Date getSynchdate() {
		return _synchdate;
	}

	@Override
	public void setSynchdate(Date synchdate) {
		_synchdate = synchdate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			CfgLimitTechnicalSpec.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CfgLimitTechnicalSpec toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CfgLimitTechnicalSpec)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CfgLimitTechnicalSpecImpl cfgLimitTechnicalSpecImpl = new CfgLimitTechnicalSpecImpl();

		cfgLimitTechnicalSpecImpl.setId(getId());
		cfgLimitTechnicalSpecImpl.setVehicletypecode(getVehicletypecode());
		cfgLimitTechnicalSpecImpl.setVehicletypename(getVehicletypename());
		cfgLimitTechnicalSpecImpl.setReference_code_3(getReference_code_3());
		cfgLimitTechnicalSpecImpl.setReference_name(getReference_name());
		cfgLimitTechnicalSpecImpl.setSearching_drive_config(getSearching_drive_config());
		cfgLimitTechnicalSpecImpl.setAltername(getAltername());
		cfgLimitTechnicalSpecImpl.setSequenceno(getSequenceno());
		cfgLimitTechnicalSpecImpl.setSpecificationcode(getSpecificationcode());
		cfgLimitTechnicalSpecImpl.setSpecificationname(getSpecificationname());
		cfgLimitTechnicalSpecImpl.setSpec_description(getSpec_description());
		cfgLimitTechnicalSpecImpl.setSpec_category(getSpec_category());
		cfgLimitTechnicalSpecImpl.setDatagroupid(getDatagroupid());
		cfgLimitTechnicalSpecImpl.setSynchdate(getSynchdate());

		cfgLimitTechnicalSpecImpl.resetOriginalValues();

		return cfgLimitTechnicalSpecImpl;
	}

	@Override
	public int compareTo(CfgLimitTechnicalSpec cfgLimitTechnicalSpec) {
		int value = 0;

		if (getSequenceno() < cfgLimitTechnicalSpec.getSequenceno()) {
			value = -1;
		}
		else if (getSequenceno() > cfgLimitTechnicalSpec.getSequenceno()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CfgLimitTechnicalSpec)) {
			return false;
		}

		CfgLimitTechnicalSpec cfgLimitTechnicalSpec = (CfgLimitTechnicalSpec)obj;

		long primaryKey = cfgLimitTechnicalSpec.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CfgLimitTechnicalSpecModelImpl cfgLimitTechnicalSpecModelImpl = this;

		cfgLimitTechnicalSpecModelImpl._originalSpecificationcode = cfgLimitTechnicalSpecModelImpl._specificationcode;

		cfgLimitTechnicalSpecModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CfgLimitTechnicalSpec> toCacheModel() {
		CfgLimitTechnicalSpecCacheModel cfgLimitTechnicalSpecCacheModel = new CfgLimitTechnicalSpecCacheModel();

		cfgLimitTechnicalSpecCacheModel.id = getId();

		cfgLimitTechnicalSpecCacheModel.vehicletypecode = getVehicletypecode();

		String vehicletypecode = cfgLimitTechnicalSpecCacheModel.vehicletypecode;

		if ((vehicletypecode != null) && (vehicletypecode.length() == 0)) {
			cfgLimitTechnicalSpecCacheModel.vehicletypecode = null;
		}

		cfgLimitTechnicalSpecCacheModel.vehicletypename = getVehicletypename();

		String vehicletypename = cfgLimitTechnicalSpecCacheModel.vehicletypename;

		if ((vehicletypename != null) && (vehicletypename.length() == 0)) {
			cfgLimitTechnicalSpecCacheModel.vehicletypename = null;
		}

		cfgLimitTechnicalSpecCacheModel.reference_code_3 = getReference_code_3();

		String reference_code_3 = cfgLimitTechnicalSpecCacheModel.reference_code_3;

		if ((reference_code_3 != null) && (reference_code_3.length() == 0)) {
			cfgLimitTechnicalSpecCacheModel.reference_code_3 = null;
		}

		cfgLimitTechnicalSpecCacheModel.reference_name = getReference_name();

		String reference_name = cfgLimitTechnicalSpecCacheModel.reference_name;

		if ((reference_name != null) && (reference_name.length() == 0)) {
			cfgLimitTechnicalSpecCacheModel.reference_name = null;
		}

		cfgLimitTechnicalSpecCacheModel.searching_drive_config = getSearching_drive_config();

		cfgLimitTechnicalSpecCacheModel.altername = getAltername();

		String altername = cfgLimitTechnicalSpecCacheModel.altername;

		if ((altername != null) && (altername.length() == 0)) {
			cfgLimitTechnicalSpecCacheModel.altername = null;
		}

		cfgLimitTechnicalSpecCacheModel.sequenceno = getSequenceno();

		cfgLimitTechnicalSpecCacheModel.specificationcode = getSpecificationcode();

		String specificationcode = cfgLimitTechnicalSpecCacheModel.specificationcode;

		if ((specificationcode != null) && (specificationcode.length() == 0)) {
			cfgLimitTechnicalSpecCacheModel.specificationcode = null;
		}

		cfgLimitTechnicalSpecCacheModel.specificationname = getSpecificationname();

		String specificationname = cfgLimitTechnicalSpecCacheModel.specificationname;

		if ((specificationname != null) && (specificationname.length() == 0)) {
			cfgLimitTechnicalSpecCacheModel.specificationname = null;
		}

		cfgLimitTechnicalSpecCacheModel.spec_description = getSpec_description();

		String spec_description = cfgLimitTechnicalSpecCacheModel.spec_description;

		if ((spec_description != null) && (spec_description.length() == 0)) {
			cfgLimitTechnicalSpecCacheModel.spec_description = null;
		}

		cfgLimitTechnicalSpecCacheModel.spec_category = getSpec_category();

		String spec_category = cfgLimitTechnicalSpecCacheModel.spec_category;

		if ((spec_category != null) && (spec_category.length() == 0)) {
			cfgLimitTechnicalSpecCacheModel.spec_category = null;
		}

		cfgLimitTechnicalSpecCacheModel.datagroupid = getDatagroupid();

		Date synchdate = getSynchdate();

		if (synchdate != null) {
			cfgLimitTechnicalSpecCacheModel.synchdate = synchdate.getTime();
		}
		else {
			cfgLimitTechnicalSpecCacheModel.synchdate = Long.MIN_VALUE;
		}

		return cfgLimitTechnicalSpecCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", vehicletypecode=");
		sb.append(getVehicletypecode());
		sb.append(", vehicletypename=");
		sb.append(getVehicletypename());
		sb.append(", reference_code_3=");
		sb.append(getReference_code_3());
		sb.append(", reference_name=");
		sb.append(getReference_name());
		sb.append(", searching_drive_config=");
		sb.append(getSearching_drive_config());
		sb.append(", altername=");
		sb.append(getAltername());
		sb.append(", sequenceno=");
		sb.append(getSequenceno());
		sb.append(", specificationcode=");
		sb.append(getSpecificationcode());
		sb.append(", specificationname=");
		sb.append(getSpecificationname());
		sb.append(", spec_description=");
		sb.append(getSpec_description());
		sb.append(", spec_category=");
		sb.append(getSpec_category());
		sb.append(", datagroupid=");
		sb.append(getDatagroupid());
		sb.append(", synchdate=");
		sb.append(getSynchdate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.gt.dk.dao.nghiepvu.model.CfgLimitTechnicalSpec");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vehicletypecode</column-name><column-value><![CDATA[");
		sb.append(getVehicletypecode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vehicletypename</column-name><column-value><![CDATA[");
		sb.append(getVehicletypename());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reference_code_3</column-name><column-value><![CDATA[");
		sb.append(getReference_code_3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reference_name</column-name><column-value><![CDATA[");
		sb.append(getReference_name());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>searching_drive_config</column-name><column-value><![CDATA[");
		sb.append(getSearching_drive_config());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>altername</column-name><column-value><![CDATA[");
		sb.append(getAltername());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sequenceno</column-name><column-value><![CDATA[");
		sb.append(getSequenceno());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>specificationcode</column-name><column-value><![CDATA[");
		sb.append(getSpecificationcode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>specificationname</column-name><column-value><![CDATA[");
		sb.append(getSpecificationname());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spec_description</column-name><column-value><![CDATA[");
		sb.append(getSpec_description());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spec_category</column-name><column-value><![CDATA[");
		sb.append(getSpec_category());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>datagroupid</column-name><column-value><![CDATA[");
		sb.append(getDatagroupid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>synchdate</column-name><column-value><![CDATA[");
		sb.append(getSynchdate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CfgLimitTechnicalSpec.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CfgLimitTechnicalSpec.class
		};
	private long _id;
	private String _vehicletypecode;
	private String _vehicletypename;
	private String _reference_code_3;
	private String _reference_name;
	private int _searching_drive_config;
	private String _altername;
	private int _sequenceno;
	private String _specificationcode;
	private String _originalSpecificationcode;
	private String _specificationname;
	private String _spec_description;
	private String _spec_category;
	private long _datagroupid;
	private Date _synchdate;
	private long _columnBitmask;
	private CfgLimitTechnicalSpec _escapedModel;
}