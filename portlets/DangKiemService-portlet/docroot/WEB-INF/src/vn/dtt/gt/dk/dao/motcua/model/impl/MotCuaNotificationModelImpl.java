/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.gt.dk.dao.motcua.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.gt.dk.dao.motcua.model.MotCuaNotification;
import vn.dtt.gt.dk.dao.motcua.model.MotCuaNotificationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the MotCuaNotification service. Represents a row in the &quot;motcua_notification&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.gt.dk.dao.motcua.model.MotCuaNotificationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MotCuaNotificationImpl}.
 * </p>
 *
 * @author huymq
 * @see MotCuaNotificationImpl
 * @see vn.dtt.gt.dk.dao.motcua.model.MotCuaNotification
 * @see vn.dtt.gt.dk.dao.motcua.model.MotCuaNotificationModel
 * @generated
 */
public class MotCuaNotificationModelImpl extends BaseModelImpl<MotCuaNotification>
	implements MotCuaNotificationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a mot cua notification model instance should use the {@link vn.dtt.gt.dk.dao.motcua.model.MotCuaNotification} interface instead.
	 */
	public static final String TABLE_NAME = "motcua_notification";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "dossierId", Types.BIGINT },
			{ "organization", Types.VARCHAR },
			{ "division", Types.VARCHAR },
			{ "officername", Types.VARCHAR },
			{ "messageid", Types.VARCHAR },
			{ "messagetype", Types.BIGINT },
			{ "phieuxulyphuid", Types.BIGINT },
			{ "response", Types.VARCHAR },
			{ "responsetime", Types.TIMESTAMP },
			{ "requestcontent", Types.VARCHAR },
			{ "requesttime", Types.TIMESTAMP },
			{ "requestsender", Types.VARCHAR },
			{ "isreply", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table motcua_notification (id LONG not null primary key,dossierId LONG,organization VARCHAR(75) null,division VARCHAR(75) null,officername VARCHAR(75) null,messageid VARCHAR(75) null,messagetype LONG,phieuxulyphuid LONG,response VARCHAR(75) null,responsetime DATE null,requestcontent VARCHAR(75) null,requesttime DATE null,requestsender VARCHAR(75) null,isreply LONG)";
	public static final String TABLE_SQL_DROP = "drop table motcua_notification";
	public static final String ORDER_BY_JPQL = " ORDER BY motCuaNotification.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY motcua_notification.id ASC";
	public static final String DATA_SOURCE = "tthcDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.gt.dk.dao.motcua.model.MotCuaNotification"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.gt.dk.dao.motcua.model.MotCuaNotification"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.gt.dk.dao.motcua.model.MotCuaNotification"));

	public MotCuaNotificationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return MotCuaNotification.class;
	}

	@Override
	public String getModelClassName() {
		return MotCuaNotification.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("dossierid", getDossierid());
		attributes.put("organization", getOrganization());
		attributes.put("division", getDivision());
		attributes.put("officerName", getOfficerName());
		attributes.put("messageID", getMessageID());
		attributes.put("messageType", getMessageType());
		attributes.put("phieuxulyphuId", getPhieuxulyphuId());
		attributes.put("response", getResponse());
		attributes.put("responseTime", getResponseTime());
		attributes.put("requestContent", getRequestContent());
		attributes.put("requestTime", getRequestTime());
		attributes.put("requestSender", getRequestSender());
		attributes.put("isReply", getIsReply());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long dossierid = (Long)attributes.get("dossierid");

		if (dossierid != null) {
			setDossierid(dossierid);
		}

		String organization = (String)attributes.get("organization");

		if (organization != null) {
			setOrganization(organization);
		}

		String division = (String)attributes.get("division");

		if (division != null) {
			setDivision(division);
		}

		String officerName = (String)attributes.get("officerName");

		if (officerName != null) {
			setOfficerName(officerName);
		}

		String messageID = (String)attributes.get("messageID");

		if (messageID != null) {
			setMessageID(messageID);
		}

		Long messageType = (Long)attributes.get("messageType");

		if (messageType != null) {
			setMessageType(messageType);
		}

		Long phieuxulyphuId = (Long)attributes.get("phieuxulyphuId");

		if (phieuxulyphuId != null) {
			setPhieuxulyphuId(phieuxulyphuId);
		}

		String response = (String)attributes.get("response");

		if (response != null) {
			setResponse(response);
		}

		Date responseTime = (Date)attributes.get("responseTime");

		if (responseTime != null) {
			setResponseTime(responseTime);
		}

		String requestContent = (String)attributes.get("requestContent");

		if (requestContent != null) {
			setRequestContent(requestContent);
		}

		Date requestTime = (Date)attributes.get("requestTime");

		if (requestTime != null) {
			setRequestTime(requestTime);
		}

		String requestSender = (String)attributes.get("requestSender");

		if (requestSender != null) {
			setRequestSender(requestSender);
		}

		Long isReply = (Long)attributes.get("isReply");

		if (isReply != null) {
			setIsReply(isReply);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public long getDossierid() {
		return _dossierid;
	}

	@Override
	public void setDossierid(long dossierid) {
		_dossierid = dossierid;
	}

	@Override
	public String getOrganization() {
		if (_organization == null) {
			return StringPool.BLANK;
		}
		else {
			return _organization;
		}
	}

	@Override
	public void setOrganization(String organization) {
		_organization = organization;
	}

	@Override
	public String getDivision() {
		if (_division == null) {
			return StringPool.BLANK;
		}
		else {
			return _division;
		}
	}

	@Override
	public void setDivision(String division) {
		_division = division;
	}

	@Override
	public String getOfficerName() {
		if (_officerName == null) {
			return StringPool.BLANK;
		}
		else {
			return _officerName;
		}
	}

	@Override
	public void setOfficerName(String officerName) {
		_officerName = officerName;
	}

	@Override
	public String getMessageID() {
		if (_messageID == null) {
			return StringPool.BLANK;
		}
		else {
			return _messageID;
		}
	}

	@Override
	public void setMessageID(String messageID) {
		_messageID = messageID;
	}

	@Override
	public long getMessageType() {
		return _messageType;
	}

	@Override
	public void setMessageType(long messageType) {
		_messageType = messageType;
	}

	@Override
	public long getPhieuxulyphuId() {
		return _phieuxulyphuId;
	}

	@Override
	public void setPhieuxulyphuId(long phieuxulyphuId) {
		_phieuxulyphuId = phieuxulyphuId;
	}

	@Override
	public String getResponse() {
		if (_response == null) {
			return StringPool.BLANK;
		}
		else {
			return _response;
		}
	}

	@Override
	public void setResponse(String response) {
		_response = response;
	}

	@Override
	public Date getResponseTime() {
		return _responseTime;
	}

	@Override
	public void setResponseTime(Date responseTime) {
		_responseTime = responseTime;
	}

	@Override
	public String getRequestContent() {
		if (_requestContent == null) {
			return StringPool.BLANK;
		}
		else {
			return _requestContent;
		}
	}

	@Override
	public void setRequestContent(String requestContent) {
		_requestContent = requestContent;
	}

	@Override
	public Date getRequestTime() {
		return _requestTime;
	}

	@Override
	public void setRequestTime(Date requestTime) {
		_requestTime = requestTime;
	}

	@Override
	public String getRequestSender() {
		if (_requestSender == null) {
			return StringPool.BLANK;
		}
		else {
			return _requestSender;
		}
	}

	@Override
	public void setRequestSender(String requestSender) {
		_requestSender = requestSender;
	}

	@Override
	public long getIsReply() {
		return _isReply;
	}

	@Override
	public void setIsReply(long isReply) {
		_isReply = isReply;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			MotCuaNotification.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public MotCuaNotification toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (MotCuaNotification)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MotCuaNotificationImpl motCuaNotificationImpl = new MotCuaNotificationImpl();

		motCuaNotificationImpl.setId(getId());
		motCuaNotificationImpl.setDossierid(getDossierid());
		motCuaNotificationImpl.setOrganization(getOrganization());
		motCuaNotificationImpl.setDivision(getDivision());
		motCuaNotificationImpl.setOfficerName(getOfficerName());
		motCuaNotificationImpl.setMessageID(getMessageID());
		motCuaNotificationImpl.setMessageType(getMessageType());
		motCuaNotificationImpl.setPhieuxulyphuId(getPhieuxulyphuId());
		motCuaNotificationImpl.setResponse(getResponse());
		motCuaNotificationImpl.setResponseTime(getResponseTime());
		motCuaNotificationImpl.setRequestContent(getRequestContent());
		motCuaNotificationImpl.setRequestTime(getRequestTime());
		motCuaNotificationImpl.setRequestSender(getRequestSender());
		motCuaNotificationImpl.setIsReply(getIsReply());

		motCuaNotificationImpl.resetOriginalValues();

		return motCuaNotificationImpl;
	}

	@Override
	public int compareTo(MotCuaNotification motCuaNotification) {
		int value = 0;

		if (getId() < motCuaNotification.getId()) {
			value = -1;
		}
		else if (getId() > motCuaNotification.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof MotCuaNotification)) {
			return false;
		}

		MotCuaNotification motCuaNotification = (MotCuaNotification)obj;

		long primaryKey = motCuaNotification.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<MotCuaNotification> toCacheModel() {
		MotCuaNotificationCacheModel motCuaNotificationCacheModel = new MotCuaNotificationCacheModel();

		motCuaNotificationCacheModel.id = getId();

		motCuaNotificationCacheModel.dossierid = getDossierid();

		motCuaNotificationCacheModel.organization = getOrganization();

		String organization = motCuaNotificationCacheModel.organization;

		if ((organization != null) && (organization.length() == 0)) {
			motCuaNotificationCacheModel.organization = null;
		}

		motCuaNotificationCacheModel.division = getDivision();

		String division = motCuaNotificationCacheModel.division;

		if ((division != null) && (division.length() == 0)) {
			motCuaNotificationCacheModel.division = null;
		}

		motCuaNotificationCacheModel.officerName = getOfficerName();

		String officerName = motCuaNotificationCacheModel.officerName;

		if ((officerName != null) && (officerName.length() == 0)) {
			motCuaNotificationCacheModel.officerName = null;
		}

		motCuaNotificationCacheModel.messageID = getMessageID();

		String messageID = motCuaNotificationCacheModel.messageID;

		if ((messageID != null) && (messageID.length() == 0)) {
			motCuaNotificationCacheModel.messageID = null;
		}

		motCuaNotificationCacheModel.messageType = getMessageType();

		motCuaNotificationCacheModel.phieuxulyphuId = getPhieuxulyphuId();

		motCuaNotificationCacheModel.response = getResponse();

		String response = motCuaNotificationCacheModel.response;

		if ((response != null) && (response.length() == 0)) {
			motCuaNotificationCacheModel.response = null;
		}

		Date responseTime = getResponseTime();

		if (responseTime != null) {
			motCuaNotificationCacheModel.responseTime = responseTime.getTime();
		}
		else {
			motCuaNotificationCacheModel.responseTime = Long.MIN_VALUE;
		}

		motCuaNotificationCacheModel.requestContent = getRequestContent();

		String requestContent = motCuaNotificationCacheModel.requestContent;

		if ((requestContent != null) && (requestContent.length() == 0)) {
			motCuaNotificationCacheModel.requestContent = null;
		}

		Date requestTime = getRequestTime();

		if (requestTime != null) {
			motCuaNotificationCacheModel.requestTime = requestTime.getTime();
		}
		else {
			motCuaNotificationCacheModel.requestTime = Long.MIN_VALUE;
		}

		motCuaNotificationCacheModel.requestSender = getRequestSender();

		String requestSender = motCuaNotificationCacheModel.requestSender;

		if ((requestSender != null) && (requestSender.length() == 0)) {
			motCuaNotificationCacheModel.requestSender = null;
		}

		motCuaNotificationCacheModel.isReply = getIsReply();

		return motCuaNotificationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", dossierid=");
		sb.append(getDossierid());
		sb.append(", organization=");
		sb.append(getOrganization());
		sb.append(", division=");
		sb.append(getDivision());
		sb.append(", officerName=");
		sb.append(getOfficerName());
		sb.append(", messageID=");
		sb.append(getMessageID());
		sb.append(", messageType=");
		sb.append(getMessageType());
		sb.append(", phieuxulyphuId=");
		sb.append(getPhieuxulyphuId());
		sb.append(", response=");
		sb.append(getResponse());
		sb.append(", responseTime=");
		sb.append(getResponseTime());
		sb.append(", requestContent=");
		sb.append(getRequestContent());
		sb.append(", requestTime=");
		sb.append(getRequestTime());
		sb.append(", requestSender=");
		sb.append(getRequestSender());
		sb.append(", isReply=");
		sb.append(getIsReply());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.gt.dk.dao.motcua.model.MotCuaNotification");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierid</column-name><column-value><![CDATA[");
		sb.append(getDossierid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organization</column-name><column-value><![CDATA[");
		sb.append(getOrganization());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>division</column-name><column-value><![CDATA[");
		sb.append(getDivision());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>officerName</column-name><column-value><![CDATA[");
		sb.append(getOfficerName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>messageID</column-name><column-value><![CDATA[");
		sb.append(getMessageID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>messageType</column-name><column-value><![CDATA[");
		sb.append(getMessageType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phieuxulyphuId</column-name><column-value><![CDATA[");
		sb.append(getPhieuxulyphuId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>response</column-name><column-value><![CDATA[");
		sb.append(getResponse());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>responseTime</column-name><column-value><![CDATA[");
		sb.append(getResponseTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requestContent</column-name><column-value><![CDATA[");
		sb.append(getRequestContent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requestTime</column-name><column-value><![CDATA[");
		sb.append(getRequestTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requestSender</column-name><column-value><![CDATA[");
		sb.append(getRequestSender());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isReply</column-name><column-value><![CDATA[");
		sb.append(getIsReply());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = MotCuaNotification.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			MotCuaNotification.class
		};
	private long _id;
	private long _dossierid;
	private String _organization;
	private String _division;
	private String _officerName;
	private String _messageID;
	private long _messageType;
	private long _phieuxulyphuId;
	private String _response;
	private Date _responseTime;
	private String _requestContent;
	private Date _requestTime;
	private String _requestSender;
	private long _isReply;
	private MotCuaNotification _escapedModel;
}