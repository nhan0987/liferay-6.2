/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.gt.dk.dao.nghiepvu.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the CustomsDeclaration service. Represents a row in the &quot;vr_customsdeclaration&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.dtt.gt.dk.dao.nghiepvu.model.impl.CustomsDeclarationModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.dtt.gt.dk.dao.nghiepvu.model.impl.CustomsDeclarationImpl}.
 * </p>
 *
 * @author huymq
 * @see CustomsDeclaration
 * @see vn.dtt.gt.dk.dao.nghiepvu.model.impl.CustomsDeclarationImpl
 * @see vn.dtt.gt.dk.dao.nghiepvu.model.impl.CustomsDeclarationModelImpl
 * @generated
 */
public interface CustomsDeclarationModel extends BaseModel<CustomsDeclaration> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a customs declaration model instance should use the {@link CustomsDeclaration} interface instead.
	 */

	/**
	 * Returns the primary key of this customs declaration.
	 *
	 * @return the primary key of this customs declaration
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this customs declaration.
	 *
	 * @param primaryKey the primary key of this customs declaration
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this customs declaration.
	 *
	 * @return the ID of this customs declaration
	 */
	public long getId();

	/**
	 * Sets the ID of this customs declaration.
	 *
	 * @param id the ID of this customs declaration
	 */
	public void setId(long id);

	/**
	 * Returns the import custom declare no of this customs declaration.
	 *
	 * @return the import custom declare no of this customs declaration
	 */
	@AutoEscape
	public String getImportCustomDeclareNo();

	/**
	 * Sets the import custom declare no of this customs declaration.
	 *
	 * @param importCustomDeclareNo the import custom declare no of this customs declaration
	 */
	public void setImportCustomDeclareNo(String importCustomDeclareNo);

	/**
	 * Returns the import custom declare date of this customs declaration.
	 *
	 * @return the import custom declare date of this customs declaration
	 */
	public Date getImportCustomDeclareDate();

	/**
	 * Sets the import custom declare date of this customs declaration.
	 *
	 * @param importCustomDeclareDate the import custom declare date of this customs declaration
	 */
	public void setImportCustomDeclareDate(Date importCustomDeclareDate);

	/**
	 * Returns the customs result of this customs declaration.
	 *
	 * @return the customs result of this customs declaration
	 */
	@AutoEscape
	public String getCustomsResult();

	/**
	 * Sets the customs result of this customs declaration.
	 *
	 * @param customsResult the customs result of this customs declaration
	 */
	public void setCustomsResult(String customsResult);

	/**
	 * Returns the product check of this customs declaration.
	 *
	 * @return the product check of this customs declaration
	 */
	@AutoEscape
	public String getProductCheck();

	/**
	 * Sets the product check of this customs declaration.
	 *
	 * @param productCheck the product check of this customs declaration
	 */
	public void setProductCheck(String productCheck);

	/**
	 * Returns the release date of this customs declaration.
	 *
	 * @return the release date of this customs declaration
	 */
	public Date getReleaseDate();

	/**
	 * Sets the release date of this customs declaration.
	 *
	 * @param releaseDate the release date of this customs declaration
	 */
	public void setReleaseDate(Date releaseDate);

	/**
	 * Returns the hosothutuc ID of this customs declaration.
	 *
	 * @return the hosothutuc ID of this customs declaration
	 */
	public long getHosothutucId();

	/**
	 * Sets the hosothutuc ID of this customs declaration.
	 *
	 * @param hosothutucId the hosothutuc ID of this customs declaration
	 */
	public void setHosothutucId(long hosothutucId);

	/**
	 * Returns the synchdate of this customs declaration.
	 *
	 * @return the synchdate of this customs declaration
	 */
	public Date getSynchdate();

	/**
	 * Sets the synchdate of this customs declaration.
	 *
	 * @param synchdate the synchdate of this customs declaration
	 */
	public void setSynchdate(Date synchdate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(CustomsDeclaration customsDeclaration);

	@Override
	public int hashCode();

	@Override
	public CacheModel<CustomsDeclaration> toCacheModel();

	@Override
	public CustomsDeclaration toEscapedModel();

	@Override
	public CustomsDeclaration toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}