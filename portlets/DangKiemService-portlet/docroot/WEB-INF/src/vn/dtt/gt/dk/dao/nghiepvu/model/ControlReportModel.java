/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.gt.dk.dao.nghiepvu.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ControlReport service. Represents a row in the &quot;vr_controlreport&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.dtt.gt.dk.dao.nghiepvu.model.impl.ControlReportModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.dtt.gt.dk.dao.nghiepvu.model.impl.ControlReportImpl}.
 * </p>
 *
 * @author huymq
 * @see ControlReport
 * @see vn.dtt.gt.dk.dao.nghiepvu.model.impl.ControlReportImpl
 * @see vn.dtt.gt.dk.dao.nghiepvu.model.impl.ControlReportModelImpl
 * @generated
 */
public interface ControlReportModel extends BaseModel<ControlReport> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a control report model instance should use the {@link ControlReport} interface instead.
	 */

	/**
	 * Returns the primary key of this control report.
	 *
	 * @return the primary key of this control report
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this control report.
	 *
	 * @param primaryKey the primary key of this control report
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this control report.
	 *
	 * @return the ID of this control report
	 */
	public long getId();

	/**
	 * Sets the ID of this control report.
	 *
	 * @param id the ID of this control report
	 */
	public void setId(long id);

	/**
	 * Returns the registered inspection ID of this control report.
	 *
	 * @return the registered inspection ID of this control report
	 */
	public long getRegisteredInspectionId();

	/**
	 * Sets the registered inspection ID of this control report.
	 *
	 * @param registeredInspectionId the registered inspection ID of this control report
	 */
	public void setRegisteredInspectionId(long registeredInspectionId);

	/**
	 * Returns the inspectionrecord ID of this control report.
	 *
	 * @return the inspectionrecord ID of this control report
	 */
	public long getInspectionrecordId();

	/**
	 * Sets the inspectionrecord ID of this control report.
	 *
	 * @param inspectionrecordId the inspectionrecord ID of this control report
	 */
	public void setInspectionrecordId(long inspectionrecordId);

	/**
	 * Returns the hosothutuc ID of this control report.
	 *
	 * @return the hosothutuc ID of this control report
	 */
	public long getHosothutucId();

	/**
	 * Sets the hosothutuc ID of this control report.
	 *
	 * @param hosothutucId the hosothutuc ID of this control report
	 */
	public void setHosothutucId(long hosothutucId);

	/**
	 * Returns the control requirement ID of this control report.
	 *
	 * @return the control requirement ID of this control report
	 */
	public long getControlRequirementId();

	/**
	 * Sets the control requirement ID of this control report.
	 *
	 * @param controlRequirementId the control requirement ID of this control report
	 */
	public void setControlRequirementId(long controlRequirementId);

	/**
	 * Returns the requirement number of this control report.
	 *
	 * @return the requirement number of this control report
	 */
	@AutoEscape
	public String getRequirementNumber();

	/**
	 * Sets the requirement number of this control report.
	 *
	 * @param requirementNumber the requirement number of this control report
	 */
	public void setRequirementNumber(String requirementNumber);

	/**
	 * Returns the report number of this control report.
	 *
	 * @return the report number of this control report
	 */
	@AutoEscape
	public String getReportNumber();

	/**
	 * Sets the report number of this control report.
	 *
	 * @param reportNumber the report number of this control report
	 */
	public void setReportNumber(String reportNumber);

	/**
	 * Returns the report date of this control report.
	 *
	 * @return the report date of this control report
	 */
	public Date getReportDate();

	/**
	 * Sets the report date of this control report.
	 *
	 * @param reportDate the report date of this control report
	 */
	public void setReportDate(Date reportDate);

	/**
	 * Returns the description of this control report.
	 *
	 * @return the description of this control report
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this control report.
	 *
	 * @param description the description of this control report
	 */
	public void setDescription(String description);

	/**
	 * Returns the attached file of this control report.
	 *
	 * @return the attached file of this control report
	 */
	public long getAttachedFile();

	/**
	 * Sets the attached file of this control report.
	 *
	 * @param attachedFile the attached file of this control report
	 */
	public void setAttachedFile(long attachedFile);

	/**
	 * Returns the sign name of this control report.
	 *
	 * @return the sign name of this control report
	 */
	@AutoEscape
	public String getSignName();

	/**
	 * Sets the sign name of this control report.
	 *
	 * @param signName the sign name of this control report
	 */
	public void setSignName(String signName);

	/**
	 * Returns the sign title of this control report.
	 *
	 * @return the sign title of this control report
	 */
	@AutoEscape
	public String getSignTitle();

	/**
	 * Sets the sign title of this control report.
	 *
	 * @param signTitle the sign title of this control report
	 */
	public void setSignTitle(String signTitle);

	/**
	 * Returns the sign place of this control report.
	 *
	 * @return the sign place of this control report
	 */
	@AutoEscape
	public String getSignPlace();

	/**
	 * Sets the sign place of this control report.
	 *
	 * @param signPlace the sign place of this control report
	 */
	public void setSignPlace(String signPlace);

	/**
	 * Returns the sign date of this control report.
	 *
	 * @return the sign date of this control report
	 */
	public Date getSignDate();

	/**
	 * Sets the sign date of this control report.
	 *
	 * @param signDate the sign date of this control report
	 */
	public void setSignDate(Date signDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(ControlReport controlReport);

	@Override
	public int hashCode();

	@Override
	public CacheModel<ControlReport> toCacheModel();

	@Override
	public ControlReport toEscapedModel();

	@Override
	public ControlReport toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}